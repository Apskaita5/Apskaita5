'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.3620
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
 Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("ReportData"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class ReportData
    Inherits Global.System.Data.DataSet
    
    Private tableTableGeneral As TableGeneralDataTable
    
    Private tableTable1 As Table1DataTable
    
    Private tableTable2 As Table2DataTable
    
    Private tableTable3 As Table3DataTable
    
    Private tableTable4 As Table4DataTable
    
    Private tableTableCompany As TableCompanyDataTable
    
    Private tableTable5 As Table5DataTable
    
    Private tableTable6 As Table6DataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("TableGeneral")) Is Nothing) Then
                MyBase.Tables.Add(New TableGeneralDataTable(ds.Tables("TableGeneral")))
            End If
            If (Not (ds.Tables("Table1")) Is Nothing) Then
                MyBase.Tables.Add(New Table1DataTable(ds.Tables("Table1")))
            End If
            If (Not (ds.Tables("Table2")) Is Nothing) Then
                MyBase.Tables.Add(New Table2DataTable(ds.Tables("Table2")))
            End If
            If (Not (ds.Tables("Table3")) Is Nothing) Then
                MyBase.Tables.Add(New Table3DataTable(ds.Tables("Table3")))
            End If
            If (Not (ds.Tables("Table4")) Is Nothing) Then
                MyBase.Tables.Add(New Table4DataTable(ds.Tables("Table4")))
            End If
            If (Not (ds.Tables("TableCompany")) Is Nothing) Then
                MyBase.Tables.Add(New TableCompanyDataTable(ds.Tables("TableCompany")))
            End If
            If (Not (ds.Tables("Table5")) Is Nothing) Then
                MyBase.Tables.Add(New Table5DataTable(ds.Tables("Table5")))
            End If
            If (Not (ds.Tables("Table6")) Is Nothing) Then
                MyBase.Tables.Add(New Table6DataTable(ds.Tables("Table6")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property TableGeneral() As TableGeneralDataTable
        Get
            Return Me.tableTableGeneral
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Table1() As Table1DataTable
        Get
            Return Me.tableTable1
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Table2() As Table2DataTable
        Get
            Return Me.tableTable2
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Table3() As Table3DataTable
        Get
            Return Me.tableTable3
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Table4() As Table4DataTable
        Get
            Return Me.tableTable4
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property TableCompany() As TableCompanyDataTable
        Get
            Return Me.tableTableCompany
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Table5() As Table5DataTable
        Get
            Return Me.tableTable5
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Table6() As Table6DataTable
        Get
            Return Me.tableTable6
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As ReportData = CType(MyBase.Clone,ReportData)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXml(reader)
            If (Not (ds.Tables("TableGeneral")) Is Nothing) Then
                MyBase.Tables.Add(New TableGeneralDataTable(ds.Tables("TableGeneral")))
            End If
            If (Not (ds.Tables("Table1")) Is Nothing) Then
                MyBase.Tables.Add(New Table1DataTable(ds.Tables("Table1")))
            End If
            If (Not (ds.Tables("Table2")) Is Nothing) Then
                MyBase.Tables.Add(New Table2DataTable(ds.Tables("Table2")))
            End If
            If (Not (ds.Tables("Table3")) Is Nothing) Then
                MyBase.Tables.Add(New Table3DataTable(ds.Tables("Table3")))
            End If
            If (Not (ds.Tables("Table4")) Is Nothing) Then
                MyBase.Tables.Add(New Table4DataTable(ds.Tables("Table4")))
            End If
            If (Not (ds.Tables("TableCompany")) Is Nothing) Then
                MyBase.Tables.Add(New TableCompanyDataTable(ds.Tables("TableCompany")))
            End If
            If (Not (ds.Tables("Table5")) Is Nothing) Then
                MyBase.Tables.Add(New Table5DataTable(ds.Tables("Table5")))
            End If
            If (Not (ds.Tables("Table6")) Is Nothing) Then
                MyBase.Tables.Add(New Table6DataTable(ds.Tables("Table6")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableTableGeneral = CType(MyBase.Tables("TableGeneral"),TableGeneralDataTable)
        If (initTable = true) Then
            If (Not (Me.tableTableGeneral) Is Nothing) Then
                Me.tableTableGeneral.InitVars
            End If
        End If
        Me.tableTable1 = CType(MyBase.Tables("Table1"),Table1DataTable)
        If (initTable = true) Then
            If (Not (Me.tableTable1) Is Nothing) Then
                Me.tableTable1.InitVars
            End If
        End If
        Me.tableTable2 = CType(MyBase.Tables("Table2"),Table2DataTable)
        If (initTable = true) Then
            If (Not (Me.tableTable2) Is Nothing) Then
                Me.tableTable2.InitVars
            End If
        End If
        Me.tableTable3 = CType(MyBase.Tables("Table3"),Table3DataTable)
        If (initTable = true) Then
            If (Not (Me.tableTable3) Is Nothing) Then
                Me.tableTable3.InitVars
            End If
        End If
        Me.tableTable4 = CType(MyBase.Tables("Table4"),Table4DataTable)
        If (initTable = true) Then
            If (Not (Me.tableTable4) Is Nothing) Then
                Me.tableTable4.InitVars
            End If
        End If
        Me.tableTableCompany = CType(MyBase.Tables("TableCompany"),TableCompanyDataTable)
        If (initTable = true) Then
            If (Not (Me.tableTableCompany) Is Nothing) Then
                Me.tableTableCompany.InitVars
            End If
        End If
        Me.tableTable5 = CType(MyBase.Tables("Table5"),Table5DataTable)
        If (initTable = true) Then
            If (Not (Me.tableTable5) Is Nothing) Then
                Me.tableTable5.InitVars
            End If
        End If
        Me.tableTable6 = CType(MyBase.Tables("Table6"),Table6DataTable)
        If (initTable = true) Then
            If (Not (Me.tableTable6) Is Nothing) Then
                Me.tableTable6.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitClass()
        Me.DataSetName = "ReportData"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/ReportData.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableTableGeneral = New TableGeneralDataTable
        MyBase.Tables.Add(Me.tableTableGeneral)
        Me.tableTable1 = New Table1DataTable
        MyBase.Tables.Add(Me.tableTable1)
        Me.tableTable2 = New Table2DataTable
        MyBase.Tables.Add(Me.tableTable2)
        Me.tableTable3 = New Table3DataTable
        MyBase.Tables.Add(Me.tableTable3)
        Me.tableTable4 = New Table4DataTable
        MyBase.Tables.Add(Me.tableTable4)
        Me.tableTableCompany = New TableCompanyDataTable
        MyBase.Tables.Add(Me.tableTableCompany)
        Me.tableTable5 = New Table5DataTable
        MyBase.Tables.Add(Me.tableTable5)
        Me.tableTable6 = New Table6DataTable
        MyBase.Tables.Add(Me.tableTable6)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeTableGeneral() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeTable1() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeTable2() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeTable3() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeTable4() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeTableCompany() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeTable5() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeTable6() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As ReportData = New ReportData
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    Public Delegate Sub TableGeneralRowChangeEventHandler(ByVal sender As Object, ByVal e As TableGeneralRowChangeEvent)
    
    Public Delegate Sub Table1RowChangeEventHandler(ByVal sender As Object, ByVal e As Table1RowChangeEvent)
    
    Public Delegate Sub Table2RowChangeEventHandler(ByVal sender As Object, ByVal e As Table2RowChangeEvent)
    
    Public Delegate Sub Table3RowChangeEventHandler(ByVal sender As Object, ByVal e As Table3RowChangeEvent)
    
    Public Delegate Sub Table4RowChangeEventHandler(ByVal sender As Object, ByVal e As Table4RowChangeEvent)
    
    Public Delegate Sub TableCompanyRowChangeEventHandler(ByVal sender As Object, ByVal e As TableCompanyRowChangeEvent)
    
    Public Delegate Sub Table5RowChangeEventHandler(ByVal sender As Object, ByVal e As Table5RowChangeEvent)
    
    Public Delegate Sub Table6RowChangeEventHandler(ByVal sender As Object, ByVal e As Table6RowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class TableGeneralDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnColumn1 As Global.System.Data.DataColumn
        
        Private columnColumn2 As Global.System.Data.DataColumn
        
        Private columnColumn3 As Global.System.Data.DataColumn
        
        Private columnColumn4 As Global.System.Data.DataColumn
        
        Private columnColumn5 As Global.System.Data.DataColumn
        
        Private columnColumn6 As Global.System.Data.DataColumn
        
        Private columnColumn7 As Global.System.Data.DataColumn
        
        Private columnColumn8 As Global.System.Data.DataColumn
        
        Private columnColumn9 As Global.System.Data.DataColumn
        
        Private columnColumn10 As Global.System.Data.DataColumn
        
        Private columnColumn11 As Global.System.Data.DataColumn
        
        Private columnColumn12 As Global.System.Data.DataColumn
        
        Private columnColumn13 As Global.System.Data.DataColumn
        
        Private columnColumn14 As Global.System.Data.DataColumn
        
        Private columnColumn15 As Global.System.Data.DataColumn
        
        Private columnColumn16 As Global.System.Data.DataColumn
        
        Private columnColumn17 As Global.System.Data.DataColumn
        
        Private columnColumn18 As Global.System.Data.DataColumn
        
        Private columnColumn19 As Global.System.Data.DataColumn
        
        Private columnColumn20 As Global.System.Data.DataColumn
        
        Private columnColumn21 As Global.System.Data.DataColumn
        
        Private columnColumn22 As Global.System.Data.DataColumn
        
        Private columnColumn23 As Global.System.Data.DataColumn
        
        Private columnColumn24 As Global.System.Data.DataColumn
        
        Private columnColumn25 As Global.System.Data.DataColumn
        
        Private columnColumn26 As Global.System.Data.DataColumn
        
        Private columnColumn27 As Global.System.Data.DataColumn
        
        Private columnColumn28 As Global.System.Data.DataColumn
        
        Private columnColumn29 As Global.System.Data.DataColumn
        
        Private columnColumn30 As Global.System.Data.DataColumn
        
        Private columnColumn31 As Global.System.Data.DataColumn
        
        Private columnColumn32 As Global.System.Data.DataColumn
        
        Private columnColumn33 As Global.System.Data.DataColumn
        
        Private columnColumn34 As Global.System.Data.DataColumn
        
        Private columnColumn35 As Global.System.Data.DataColumn
        
        Private columnColumn36 As Global.System.Data.DataColumn
        
        Private columnColumn37 As Global.System.Data.DataColumn
        
        Private columnColumn38 As Global.System.Data.DataColumn
        
        Private columnColumn39 As Global.System.Data.DataColumn
        
        Private columnColumn40 As Global.System.Data.DataColumn
        
        Private columnColumn41 As Global.System.Data.DataColumn
        
        Private columnColumn42 As Global.System.Data.DataColumn
        
        Private columnColumn43 As Global.System.Data.DataColumn
        
        Private columnColumn44 As Global.System.Data.DataColumn
        
        Private columnColumn45 As Global.System.Data.DataColumn
        
        Private columnColumn46 As Global.System.Data.DataColumn
        
        Private columnColumn47 As Global.System.Data.DataColumn
        
        Private columnColumn48 As Global.System.Data.DataColumn
        
        Private columnColumn49 As Global.System.Data.DataColumn
        
        Private columnColumn50 As Global.System.Data.DataColumn
        
        Private columnP_Column1 As Global.System.Data.DataColumn
        
        Private columnP_Column2 As Global.System.Data.DataColumn
        
        Private columnP_Column3 As Global.System.Data.DataColumn
        
        Private columnP_Column4 As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "TableGeneral"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column5Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn5
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column6Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn6
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column7Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn7
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column8Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn8
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column9Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn9
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column10Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn10
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column11Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn11
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column12Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn12
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column13Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn13
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column14Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn14
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column15Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn15
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column16Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn16
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column17Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn17
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column18Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn18
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column19Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn19
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column20Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn20
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column21Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn21
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column22Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn22
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column23Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn23
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column24Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn24
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column25Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn25
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column26Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn26
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column27Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn27
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column28Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn28
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column29Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn29
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column30Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn30
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column31Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn31
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column32Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn32
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column33Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn33
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column34Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn34
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column35Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn35
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column36Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn36
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column37Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn37
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column38Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn38
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column39Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn39
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column40Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn40
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column41Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn41
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column42Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn42
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column43Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn43
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column44Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn44
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column45Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn45
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column46Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn46
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column47Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn47
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column48Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn48
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column49Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn49
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column50Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn50
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property P_Column1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnP_Column1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property P_Column2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnP_Column2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property P_Column3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnP_Column3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property P_Column4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnP_Column4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As TableGeneralRow
            Get
                Return CType(Me.Rows(index),TableGeneralRow)
            End Get
        End Property
        
        Public Event TableGeneralRowChanging As TableGeneralRowChangeEventHandler
        
        Public Event TableGeneralRowChanged As TableGeneralRowChangeEventHandler
        
        Public Event TableGeneralRowDeleting As TableGeneralRowChangeEventHandler
        
        Public Event TableGeneralRowDeleted As TableGeneralRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddTableGeneralRow(ByVal row As TableGeneralRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddTableGeneralRow( _
                    ByVal Column1 As String,  _
                    ByVal Column2 As String,  _
                    ByVal Column3 As String,  _
                    ByVal Column4 As String,  _
                    ByVal Column5 As String,  _
                    ByVal Column6 As String,  _
                    ByVal Column7 As String,  _
                    ByVal Column8 As String,  _
                    ByVal Column9 As String,  _
                    ByVal Column10 As String,  _
                    ByVal Column11 As String,  _
                    ByVal Column12 As String,  _
                    ByVal Column13 As String,  _
                    ByVal Column14 As String,  _
                    ByVal Column15 As String,  _
                    ByVal Column16 As String,  _
                    ByVal Column17 As String,  _
                    ByVal Column18 As String,  _
                    ByVal Column19 As String,  _
                    ByVal Column20 As String,  _
                    ByVal Column21 As String,  _
                    ByVal Column22 As String,  _
                    ByVal Column23 As String,  _
                    ByVal Column24 As String,  _
                    ByVal Column25 As String,  _
                    ByVal Column26 As String,  _
                    ByVal Column27 As String,  _
                    ByVal Column28 As String,  _
                    ByVal Column29 As String,  _
                    ByVal Column30 As String,  _
                    ByVal Column31 As String,  _
                    ByVal Column32 As String,  _
                    ByVal Column33 As String,  _
                    ByVal Column34 As String,  _
                    ByVal Column35 As String,  _
                    ByVal Column36 As String,  _
                    ByVal Column37 As String,  _
                    ByVal Column38 As String,  _
                    ByVal Column39 As String,  _
                    ByVal Column40 As String,  _
                    ByVal Column41 As String,  _
                    ByVal Column42 As String,  _
                    ByVal Column43 As String,  _
                    ByVal Column44 As String,  _
                    ByVal Column45 As String,  _
                    ByVal Column46 As String,  _
                    ByVal Column47 As String,  _
                    ByVal Column48 As String,  _
                    ByVal Column49 As String,  _
                    ByVal Column50 As String,  _
                    ByVal P_Column1() As Byte,  _
                    ByVal P_Column2() As Byte,  _
                    ByVal P_Column3 As String,  _
                    ByVal P_Column4 As String) As TableGeneralRow
            Dim rowTableGeneralRow As TableGeneralRow = CType(Me.NewRow,TableGeneralRow)
            Dim columnValuesArray() As Object = New Object() {Column1, Column2, Column3, Column4, Column5, Column6, Column7, Column8, Column9, Column10, Column11, Column12, Column13, Column14, Column15, Column16, Column17, Column18, Column19, Column20, Column21, Column22, Column23, Column24, Column25, Column26, Column27, Column28, Column29, Column30, Column31, Column32, Column33, Column34, Column35, Column36, Column37, Column38, Column39, Column40, Column41, Column42, Column43, Column44, Column45, Column46, Column47, Column48, Column49, Column50, P_Column1, P_Column2, P_Column3, P_Column4}
            rowTableGeneralRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowTableGeneralRow)
            Return rowTableGeneralRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As TableGeneralDataTable = CType(MyBase.Clone,TableGeneralDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New TableGeneralDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnColumn1 = MyBase.Columns("Column1")
            Me.columnColumn2 = MyBase.Columns("Column2")
            Me.columnColumn3 = MyBase.Columns("Column3")
            Me.columnColumn4 = MyBase.Columns("Column4")
            Me.columnColumn5 = MyBase.Columns("Column5")
            Me.columnColumn6 = MyBase.Columns("Column6")
            Me.columnColumn7 = MyBase.Columns("Column7")
            Me.columnColumn8 = MyBase.Columns("Column8")
            Me.columnColumn9 = MyBase.Columns("Column9")
            Me.columnColumn10 = MyBase.Columns("Column10")
            Me.columnColumn11 = MyBase.Columns("Column11")
            Me.columnColumn12 = MyBase.Columns("Column12")
            Me.columnColumn13 = MyBase.Columns("Column13")
            Me.columnColumn14 = MyBase.Columns("Column14")
            Me.columnColumn15 = MyBase.Columns("Column15")
            Me.columnColumn16 = MyBase.Columns("Column16")
            Me.columnColumn17 = MyBase.Columns("Column17")
            Me.columnColumn18 = MyBase.Columns("Column18")
            Me.columnColumn19 = MyBase.Columns("Column19")
            Me.columnColumn20 = MyBase.Columns("Column20")
            Me.columnColumn21 = MyBase.Columns("Column21")
            Me.columnColumn22 = MyBase.Columns("Column22")
            Me.columnColumn23 = MyBase.Columns("Column23")
            Me.columnColumn24 = MyBase.Columns("Column24")
            Me.columnColumn25 = MyBase.Columns("Column25")
            Me.columnColumn26 = MyBase.Columns("Column26")
            Me.columnColumn27 = MyBase.Columns("Column27")
            Me.columnColumn28 = MyBase.Columns("Column28")
            Me.columnColumn29 = MyBase.Columns("Column29")
            Me.columnColumn30 = MyBase.Columns("Column30")
            Me.columnColumn31 = MyBase.Columns("Column31")
            Me.columnColumn32 = MyBase.Columns("Column32")
            Me.columnColumn33 = MyBase.Columns("Column33")
            Me.columnColumn34 = MyBase.Columns("Column34")
            Me.columnColumn35 = MyBase.Columns("Column35")
            Me.columnColumn36 = MyBase.Columns("Column36")
            Me.columnColumn37 = MyBase.Columns("Column37")
            Me.columnColumn38 = MyBase.Columns("Column38")
            Me.columnColumn39 = MyBase.Columns("Column39")
            Me.columnColumn40 = MyBase.Columns("Column40")
            Me.columnColumn41 = MyBase.Columns("Column41")
            Me.columnColumn42 = MyBase.Columns("Column42")
            Me.columnColumn43 = MyBase.Columns("Column43")
            Me.columnColumn44 = MyBase.Columns("Column44")
            Me.columnColumn45 = MyBase.Columns("Column45")
            Me.columnColumn46 = MyBase.Columns("Column46")
            Me.columnColumn47 = MyBase.Columns("Column47")
            Me.columnColumn48 = MyBase.Columns("Column48")
            Me.columnColumn49 = MyBase.Columns("Column49")
            Me.columnColumn50 = MyBase.Columns("Column50")
            Me.columnP_Column1 = MyBase.Columns("P_Column1")
            Me.columnP_Column2 = MyBase.Columns("P_Column2")
            Me.columnP_Column3 = MyBase.Columns("P_Column3")
            Me.columnP_Column4 = MyBase.Columns("P_Column4")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnColumn1 = New Global.System.Data.DataColumn("Column1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn1)
            Me.columnColumn2 = New Global.System.Data.DataColumn("Column2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn2)
            Me.columnColumn3 = New Global.System.Data.DataColumn("Column3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn3)
            Me.columnColumn4 = New Global.System.Data.DataColumn("Column4", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn4)
            Me.columnColumn5 = New Global.System.Data.DataColumn("Column5", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn5)
            Me.columnColumn6 = New Global.System.Data.DataColumn("Column6", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn6)
            Me.columnColumn7 = New Global.System.Data.DataColumn("Column7", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn7)
            Me.columnColumn8 = New Global.System.Data.DataColumn("Column8", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn8)
            Me.columnColumn9 = New Global.System.Data.DataColumn("Column9", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn9)
            Me.columnColumn10 = New Global.System.Data.DataColumn("Column10", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn10)
            Me.columnColumn11 = New Global.System.Data.DataColumn("Column11", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn11)
            Me.columnColumn12 = New Global.System.Data.DataColumn("Column12", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn12)
            Me.columnColumn13 = New Global.System.Data.DataColumn("Column13", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn13)
            Me.columnColumn14 = New Global.System.Data.DataColumn("Column14", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn14)
            Me.columnColumn15 = New Global.System.Data.DataColumn("Column15", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn15)
            Me.columnColumn16 = New Global.System.Data.DataColumn("Column16", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn16)
            Me.columnColumn17 = New Global.System.Data.DataColumn("Column17", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn17)
            Me.columnColumn18 = New Global.System.Data.DataColumn("Column18", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn18)
            Me.columnColumn19 = New Global.System.Data.DataColumn("Column19", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn19)
            Me.columnColumn20 = New Global.System.Data.DataColumn("Column20", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn20)
            Me.columnColumn21 = New Global.System.Data.DataColumn("Column21", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn21)
            Me.columnColumn22 = New Global.System.Data.DataColumn("Column22", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn22)
            Me.columnColumn23 = New Global.System.Data.DataColumn("Column23", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn23)
            Me.columnColumn24 = New Global.System.Data.DataColumn("Column24", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn24)
            Me.columnColumn25 = New Global.System.Data.DataColumn("Column25", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn25)
            Me.columnColumn26 = New Global.System.Data.DataColumn("Column26", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn26)
            Me.columnColumn27 = New Global.System.Data.DataColumn("Column27", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn27)
            Me.columnColumn28 = New Global.System.Data.DataColumn("Column28", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn28)
            Me.columnColumn29 = New Global.System.Data.DataColumn("Column29", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn29)
            Me.columnColumn30 = New Global.System.Data.DataColumn("Column30", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn30)
            Me.columnColumn31 = New Global.System.Data.DataColumn("Column31", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn31)
            Me.columnColumn32 = New Global.System.Data.DataColumn("Column32", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn32)
            Me.columnColumn33 = New Global.System.Data.DataColumn("Column33", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn33)
            Me.columnColumn34 = New Global.System.Data.DataColumn("Column34", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn34)
            Me.columnColumn35 = New Global.System.Data.DataColumn("Column35", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn35)
            Me.columnColumn36 = New Global.System.Data.DataColumn("Column36", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn36)
            Me.columnColumn37 = New Global.System.Data.DataColumn("Column37", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn37)
            Me.columnColumn38 = New Global.System.Data.DataColumn("Column38", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn38)
            Me.columnColumn39 = New Global.System.Data.DataColumn("Column39", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn39)
            Me.columnColumn40 = New Global.System.Data.DataColumn("Column40", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn40)
            Me.columnColumn41 = New Global.System.Data.DataColumn("Column41", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn41)
            Me.columnColumn42 = New Global.System.Data.DataColumn("Column42", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn42)
            Me.columnColumn43 = New Global.System.Data.DataColumn("Column43", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn43)
            Me.columnColumn44 = New Global.System.Data.DataColumn("Column44", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn44)
            Me.columnColumn45 = New Global.System.Data.DataColumn("Column45", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn45)
            Me.columnColumn46 = New Global.System.Data.DataColumn("Column46", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn46)
            Me.columnColumn47 = New Global.System.Data.DataColumn("Column47", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn47)
            Me.columnColumn48 = New Global.System.Data.DataColumn("Column48", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn48)
            Me.columnColumn49 = New Global.System.Data.DataColumn("Column49", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn49)
            Me.columnColumn50 = New Global.System.Data.DataColumn("Column50", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn50)
            Me.columnP_Column1 = New Global.System.Data.DataColumn("P_Column1", GetType(Byte()), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnP_Column1)
            Me.columnP_Column2 = New Global.System.Data.DataColumn("P_Column2", GetType(Byte()), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnP_Column2)
            Me.columnP_Column3 = New Global.System.Data.DataColumn("P_Column3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnP_Column3)
            Me.columnP_Column4 = New Global.System.Data.DataColumn("P_Column4", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnP_Column4)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewTableGeneralRow() As TableGeneralRow
            Return CType(Me.NewRow,TableGeneralRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New TableGeneralRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(TableGeneralRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.TableGeneralRowChangedEvent) Is Nothing) Then
                RaiseEvent TableGeneralRowChanged(Me, New TableGeneralRowChangeEvent(CType(e.Row,TableGeneralRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.TableGeneralRowChangingEvent) Is Nothing) Then
                RaiseEvent TableGeneralRowChanging(Me, New TableGeneralRowChangeEvent(CType(e.Row,TableGeneralRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.TableGeneralRowDeletedEvent) Is Nothing) Then
                RaiseEvent TableGeneralRowDeleted(Me, New TableGeneralRowChangeEvent(CType(e.Row,TableGeneralRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.TableGeneralRowDeletingEvent) Is Nothing) Then
                RaiseEvent TableGeneralRowDeleting(Me, New TableGeneralRowChangeEvent(CType(e.Row,TableGeneralRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveTableGeneralRow(ByVal row As TableGeneralRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As ReportData = New ReportData
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "TableGeneralDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class Table1DataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnColumn1 As Global.System.Data.DataColumn
        
        Private columnColumn2 As Global.System.Data.DataColumn
        
        Private columnColumn3 As Global.System.Data.DataColumn
        
        Private columnColumn4 As Global.System.Data.DataColumn
        
        Private columnColumn5 As Global.System.Data.DataColumn
        
        Private columnColumn6 As Global.System.Data.DataColumn
        
        Private columnColumn7 As Global.System.Data.DataColumn
        
        Private columnColumn8 As Global.System.Data.DataColumn
        
        Private columnColumn9 As Global.System.Data.DataColumn
        
        Private columnColumn10 As Global.System.Data.DataColumn
        
        Private columnColumn11 As Global.System.Data.DataColumn
        
        Private columnColumn12 As Global.System.Data.DataColumn
        
        Private columnColumn13 As Global.System.Data.DataColumn
        
        Private columnColumn14 As Global.System.Data.DataColumn
        
        Private columnColumn15 As Global.System.Data.DataColumn
        
        Private columnColumn16 As Global.System.Data.DataColumn
        
        Private columnColumn17 As Global.System.Data.DataColumn
        
        Private columnColumn18 As Global.System.Data.DataColumn
        
        Private columnColumn19 As Global.System.Data.DataColumn
        
        Private columnColumn20 As Global.System.Data.DataColumn
        
        Private columnColumn21 As Global.System.Data.DataColumn
        
        Private columnColumn22 As Global.System.Data.DataColumn
        
        Private columnColumn23 As Global.System.Data.DataColumn
        
        Private columnColumn24 As Global.System.Data.DataColumn
        
        Private columnColumn25 As Global.System.Data.DataColumn
        
        Private columnColumn26 As Global.System.Data.DataColumn
        
        Private columnColumn27 As Global.System.Data.DataColumn
        
        Private columnColumn28 As Global.System.Data.DataColumn
        
        Private columnColumn29 As Global.System.Data.DataColumn
        
        Private columnColumn30 As Global.System.Data.DataColumn
        
        Private columnColumn31 As Global.System.Data.DataColumn
        
        Private columnColumn32 As Global.System.Data.DataColumn
        
        Private columnColumn33 As Global.System.Data.DataColumn
        
        Private columnColumn34 As Global.System.Data.DataColumn
        
        Private columnColumn35 As Global.System.Data.DataColumn
        
        Private columnColumn36 As Global.System.Data.DataColumn
        
        Private columnColumn37 As Global.System.Data.DataColumn
        
        Private columnColumn38 As Global.System.Data.DataColumn
        
        Private columnColumn39 As Global.System.Data.DataColumn
        
        Private columnColumn40 As Global.System.Data.DataColumn
        
        Private columnColumn41 As Global.System.Data.DataColumn
        
        Private columnColumn42 As Global.System.Data.DataColumn
        
        Private columnColumn43 As Global.System.Data.DataColumn
        
        Private columnColumn44 As Global.System.Data.DataColumn
        
        Private columnColumn45 As Global.System.Data.DataColumn
        
        Private columnColumn46 As Global.System.Data.DataColumn
        
        Private columnColumn47 As Global.System.Data.DataColumn
        
        Private columnColumn48 As Global.System.Data.DataColumn
        
        Private columnColumn49 As Global.System.Data.DataColumn
        
        Private columnColumn50 As Global.System.Data.DataColumn
        
        Private columnColumn51 As Global.System.Data.DataColumn
        
        Private columnColumn52 As Global.System.Data.DataColumn
        
        Private columnColumn53 As Global.System.Data.DataColumn
        
        Private columnColumn54 As Global.System.Data.DataColumn
        
        Private columnColumn55 As Global.System.Data.DataColumn
        
        Private columnColumn56 As Global.System.Data.DataColumn
        
        Private columnColumn57 As Global.System.Data.DataColumn
        
        Private columnColumn58 As Global.System.Data.DataColumn
        
        Private columnColumn59 As Global.System.Data.DataColumn
        
        Private columnColumn60 As Global.System.Data.DataColumn
        
        Private columnColumn61 As Global.System.Data.DataColumn
        
        Private columnColumn62 As Global.System.Data.DataColumn
        
        Private columnColumn63 As Global.System.Data.DataColumn
        
        Private columnColumn64 As Global.System.Data.DataColumn
        
        Private columnColumn65 As Global.System.Data.DataColumn
        
        Private columnColumn66 As Global.System.Data.DataColumn
        
        Private columnColumn67 As Global.System.Data.DataColumn
        
        Private columnColumn68 As Global.System.Data.DataColumn
        
        Private columnColumn69 As Global.System.Data.DataColumn
        
        Private columnColumn70 As Global.System.Data.DataColumn
        
        Private columnColumn71 As Global.System.Data.DataColumn
        
        Private columnColumn72 As Global.System.Data.DataColumn
        
        Private columnColumn73 As Global.System.Data.DataColumn
        
        Private columnColumn74 As Global.System.Data.DataColumn
        
        Private columnColumn75 As Global.System.Data.DataColumn
        
        Private columnColumn76 As Global.System.Data.DataColumn
        
        Private columnColumn77 As Global.System.Data.DataColumn
        
        Private columnColumn78 As Global.System.Data.DataColumn
        
        Private columnColumn79 As Global.System.Data.DataColumn
        
        Private columnColumn80 As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Table1"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column5Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn5
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column6Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn6
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column7Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn7
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column8Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn8
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column9Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn9
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column10Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn10
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column11Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn11
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column12Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn12
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column13Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn13
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column14Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn14
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column15Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn15
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column16Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn16
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column17Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn17
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column18Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn18
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column19Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn19
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column20Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn20
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column21Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn21
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column22Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn22
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column23Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn23
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column24Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn24
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column25Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn25
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column26Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn26
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column27Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn27
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column28Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn28
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column29Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn29
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column30Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn30
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column31Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn31
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column32Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn32
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column33Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn33
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column34Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn34
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column35Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn35
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column36Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn36
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column37Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn37
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column38Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn38
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column39Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn39
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column40Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn40
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column41Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn41
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column42Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn42
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column43Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn43
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column44Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn44
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column45Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn45
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column46Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn46
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column47Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn47
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column48Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn48
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column49Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn49
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column50Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn50
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column51Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn51
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column52Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn52
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column53Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn53
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column54Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn54
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column55Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn55
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column56Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn56
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column57Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn57
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column58Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn58
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column59Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn59
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column60Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn60
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column61Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn61
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column62Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn62
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column63Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn63
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column64Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn64
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column65Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn65
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column66Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn66
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column67Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn67
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column68Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn68
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column69Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn69
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column70Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn70
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column71Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn71
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column72Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn72
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column73Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn73
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column74Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn74
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column75Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn75
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column76Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn76
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column77Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn77
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column78Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn78
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column79Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn79
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column80Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn80
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As Table1Row
            Get
                Return CType(Me.Rows(index),Table1Row)
            End Get
        End Property
        
        Public Event Table1RowChanging As Table1RowChangeEventHandler
        
        Public Event Table1RowChanged As Table1RowChangeEventHandler
        
        Public Event Table1RowDeleting As Table1RowChangeEventHandler
        
        Public Event Table1RowDeleted As Table1RowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddTable1Row(ByVal row As Table1Row)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddTable1Row( _
                    ByVal Column1 As String,  _
                    ByVal Column2 As String,  _
                    ByVal Column3 As String,  _
                    ByVal Column4 As String,  _
                    ByVal Column5 As String,  _
                    ByVal Column6 As String,  _
                    ByVal Column7 As String,  _
                    ByVal Column8 As String,  _
                    ByVal Column9 As String,  _
                    ByVal Column10 As String,  _
                    ByVal Column11 As String,  _
                    ByVal Column12 As String,  _
                    ByVal Column13 As String,  _
                    ByVal Column14 As String,  _
                    ByVal Column15 As String,  _
                    ByVal Column16 As String,  _
                    ByVal Column17 As String,  _
                    ByVal Column18 As String,  _
                    ByVal Column19 As String,  _
                    ByVal Column20 As String,  _
                    ByVal Column21 As String,  _
                    ByVal Column22 As String,  _
                    ByVal Column23 As String,  _
                    ByVal Column24 As String,  _
                    ByVal Column25 As String,  _
                    ByVal Column26 As String,  _
                    ByVal Column27 As String,  _
                    ByVal Column28 As String,  _
                    ByVal Column29 As String,  _
                    ByVal Column30 As String,  _
                    ByVal Column31 As String,  _
                    ByVal Column32 As String,  _
                    ByVal Column33 As String,  _
                    ByVal Column34 As String,  _
                    ByVal Column35 As String,  _
                    ByVal Column36 As String,  _
                    ByVal Column37 As String,  _
                    ByVal Column38 As String,  _
                    ByVal Column39 As String,  _
                    ByVal Column40 As String,  _
                    ByVal Column41 As String,  _
                    ByVal Column42 As String,  _
                    ByVal Column43 As String,  _
                    ByVal Column44 As String,  _
                    ByVal Column45 As String,  _
                    ByVal Column46 As String,  _
                    ByVal Column47 As String,  _
                    ByVal Column48 As String,  _
                    ByVal Column49 As String,  _
                    ByVal Column50 As String,  _
                    ByVal Column51 As String,  _
                    ByVal Column52 As String,  _
                    ByVal Column53 As String,  _
                    ByVal Column54 As String,  _
                    ByVal Column55 As String,  _
                    ByVal Column56 As String,  _
                    ByVal Column57 As String,  _
                    ByVal Column58 As String,  _
                    ByVal Column59 As String,  _
                    ByVal Column60 As String,  _
                    ByVal Column61 As String,  _
                    ByVal Column62 As String,  _
                    ByVal Column63 As String,  _
                    ByVal Column64 As String,  _
                    ByVal Column65 As String,  _
                    ByVal Column66 As String,  _
                    ByVal Column67 As String,  _
                    ByVal Column68 As String,  _
                    ByVal Column69 As String,  _
                    ByVal Column70 As String,  _
                    ByVal Column71 As String,  _
                    ByVal Column72 As String,  _
                    ByVal Column73 As String,  _
                    ByVal Column74 As String,  _
                    ByVal Column75 As String,  _
                    ByVal Column76 As String,  _
                    ByVal Column77 As String,  _
                    ByVal Column78 As String,  _
                    ByVal Column79 As String,  _
                    ByVal Column80 As String) As Table1Row
            Dim rowTable1Row As Table1Row = CType(Me.NewRow,Table1Row)
            Dim columnValuesArray() As Object = New Object() {Column1, Column2, Column3, Column4, Column5, Column6, Column7, Column8, Column9, Column10, Column11, Column12, Column13, Column14, Column15, Column16, Column17, Column18, Column19, Column20, Column21, Column22, Column23, Column24, Column25, Column26, Column27, Column28, Column29, Column30, Column31, Column32, Column33, Column34, Column35, Column36, Column37, Column38, Column39, Column40, Column41, Column42, Column43, Column44, Column45, Column46, Column47, Column48, Column49, Column50, Column51, Column52, Column53, Column54, Column55, Column56, Column57, Column58, Column59, Column60, Column61, Column62, Column63, Column64, Column65, Column66, Column67, Column68, Column69, Column70, Column71, Column72, Column73, Column74, Column75, Column76, Column77, Column78, Column79, Column80}
            rowTable1Row.ItemArray = columnValuesArray
            Me.Rows.Add(rowTable1Row)
            Return rowTable1Row
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As Table1DataTable = CType(MyBase.Clone,Table1DataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New Table1DataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnColumn1 = MyBase.Columns("Column1")
            Me.columnColumn2 = MyBase.Columns("Column2")
            Me.columnColumn3 = MyBase.Columns("Column3")
            Me.columnColumn4 = MyBase.Columns("Column4")
            Me.columnColumn5 = MyBase.Columns("Column5")
            Me.columnColumn6 = MyBase.Columns("Column6")
            Me.columnColumn7 = MyBase.Columns("Column7")
            Me.columnColumn8 = MyBase.Columns("Column8")
            Me.columnColumn9 = MyBase.Columns("Column9")
            Me.columnColumn10 = MyBase.Columns("Column10")
            Me.columnColumn11 = MyBase.Columns("Column11")
            Me.columnColumn12 = MyBase.Columns("Column12")
            Me.columnColumn13 = MyBase.Columns("Column13")
            Me.columnColumn14 = MyBase.Columns("Column14")
            Me.columnColumn15 = MyBase.Columns("Column15")
            Me.columnColumn16 = MyBase.Columns("Column16")
            Me.columnColumn17 = MyBase.Columns("Column17")
            Me.columnColumn18 = MyBase.Columns("Column18")
            Me.columnColumn19 = MyBase.Columns("Column19")
            Me.columnColumn20 = MyBase.Columns("Column20")
            Me.columnColumn21 = MyBase.Columns("Column21")
            Me.columnColumn22 = MyBase.Columns("Column22")
            Me.columnColumn23 = MyBase.Columns("Column23")
            Me.columnColumn24 = MyBase.Columns("Column24")
            Me.columnColumn25 = MyBase.Columns("Column25")
            Me.columnColumn26 = MyBase.Columns("Column26")
            Me.columnColumn27 = MyBase.Columns("Column27")
            Me.columnColumn28 = MyBase.Columns("Column28")
            Me.columnColumn29 = MyBase.Columns("Column29")
            Me.columnColumn30 = MyBase.Columns("Column30")
            Me.columnColumn31 = MyBase.Columns("Column31")
            Me.columnColumn32 = MyBase.Columns("Column32")
            Me.columnColumn33 = MyBase.Columns("Column33")
            Me.columnColumn34 = MyBase.Columns("Column34")
            Me.columnColumn35 = MyBase.Columns("Column35")
            Me.columnColumn36 = MyBase.Columns("Column36")
            Me.columnColumn37 = MyBase.Columns("Column37")
            Me.columnColumn38 = MyBase.Columns("Column38")
            Me.columnColumn39 = MyBase.Columns("Column39")
            Me.columnColumn40 = MyBase.Columns("Column40")
            Me.columnColumn41 = MyBase.Columns("Column41")
            Me.columnColumn42 = MyBase.Columns("Column42")
            Me.columnColumn43 = MyBase.Columns("Column43")
            Me.columnColumn44 = MyBase.Columns("Column44")
            Me.columnColumn45 = MyBase.Columns("Column45")
            Me.columnColumn46 = MyBase.Columns("Column46")
            Me.columnColumn47 = MyBase.Columns("Column47")
            Me.columnColumn48 = MyBase.Columns("Column48")
            Me.columnColumn49 = MyBase.Columns("Column49")
            Me.columnColumn50 = MyBase.Columns("Column50")
            Me.columnColumn51 = MyBase.Columns("Column51")
            Me.columnColumn52 = MyBase.Columns("Column52")
            Me.columnColumn53 = MyBase.Columns("Column53")
            Me.columnColumn54 = MyBase.Columns("Column54")
            Me.columnColumn55 = MyBase.Columns("Column55")
            Me.columnColumn56 = MyBase.Columns("Column56")
            Me.columnColumn57 = MyBase.Columns("Column57")
            Me.columnColumn58 = MyBase.Columns("Column58")
            Me.columnColumn59 = MyBase.Columns("Column59")
            Me.columnColumn60 = MyBase.Columns("Column60")
            Me.columnColumn61 = MyBase.Columns("Column61")
            Me.columnColumn62 = MyBase.Columns("Column62")
            Me.columnColumn63 = MyBase.Columns("Column63")
            Me.columnColumn64 = MyBase.Columns("Column64")
            Me.columnColumn65 = MyBase.Columns("Column65")
            Me.columnColumn66 = MyBase.Columns("Column66")
            Me.columnColumn67 = MyBase.Columns("Column67")
            Me.columnColumn68 = MyBase.Columns("Column68")
            Me.columnColumn69 = MyBase.Columns("Column69")
            Me.columnColumn70 = MyBase.Columns("Column70")
            Me.columnColumn71 = MyBase.Columns("Column71")
            Me.columnColumn72 = MyBase.Columns("Column72")
            Me.columnColumn73 = MyBase.Columns("Column73")
            Me.columnColumn74 = MyBase.Columns("Column74")
            Me.columnColumn75 = MyBase.Columns("Column75")
            Me.columnColumn76 = MyBase.Columns("Column76")
            Me.columnColumn77 = MyBase.Columns("Column77")
            Me.columnColumn78 = MyBase.Columns("Column78")
            Me.columnColumn79 = MyBase.Columns("Column79")
            Me.columnColumn80 = MyBase.Columns("Column80")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnColumn1 = New Global.System.Data.DataColumn("Column1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn1)
            Me.columnColumn2 = New Global.System.Data.DataColumn("Column2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn2)
            Me.columnColumn3 = New Global.System.Data.DataColumn("Column3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn3)
            Me.columnColumn4 = New Global.System.Data.DataColumn("Column4", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn4)
            Me.columnColumn5 = New Global.System.Data.DataColumn("Column5", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn5)
            Me.columnColumn6 = New Global.System.Data.DataColumn("Column6", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn6)
            Me.columnColumn7 = New Global.System.Data.DataColumn("Column7", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn7)
            Me.columnColumn8 = New Global.System.Data.DataColumn("Column8", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn8)
            Me.columnColumn9 = New Global.System.Data.DataColumn("Column9", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn9)
            Me.columnColumn10 = New Global.System.Data.DataColumn("Column10", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn10)
            Me.columnColumn11 = New Global.System.Data.DataColumn("Column11", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn11)
            Me.columnColumn12 = New Global.System.Data.DataColumn("Column12", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn12)
            Me.columnColumn13 = New Global.System.Data.DataColumn("Column13", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn13)
            Me.columnColumn14 = New Global.System.Data.DataColumn("Column14", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn14)
            Me.columnColumn15 = New Global.System.Data.DataColumn("Column15", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn15)
            Me.columnColumn16 = New Global.System.Data.DataColumn("Column16", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn16)
            Me.columnColumn17 = New Global.System.Data.DataColumn("Column17", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn17)
            Me.columnColumn18 = New Global.System.Data.DataColumn("Column18", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn18)
            Me.columnColumn19 = New Global.System.Data.DataColumn("Column19", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn19)
            Me.columnColumn20 = New Global.System.Data.DataColumn("Column20", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn20)
            Me.columnColumn21 = New Global.System.Data.DataColumn("Column21", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn21)
            Me.columnColumn22 = New Global.System.Data.DataColumn("Column22", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn22)
            Me.columnColumn23 = New Global.System.Data.DataColumn("Column23", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn23)
            Me.columnColumn24 = New Global.System.Data.DataColumn("Column24", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn24)
            Me.columnColumn25 = New Global.System.Data.DataColumn("Column25", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn25)
            Me.columnColumn26 = New Global.System.Data.DataColumn("Column26", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn26)
            Me.columnColumn27 = New Global.System.Data.DataColumn("Column27", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn27)
            Me.columnColumn28 = New Global.System.Data.DataColumn("Column28", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn28)
            Me.columnColumn29 = New Global.System.Data.DataColumn("Column29", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn29)
            Me.columnColumn30 = New Global.System.Data.DataColumn("Column30", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn30)
            Me.columnColumn31 = New Global.System.Data.DataColumn("Column31", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn31)
            Me.columnColumn32 = New Global.System.Data.DataColumn("Column32", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn32)
            Me.columnColumn33 = New Global.System.Data.DataColumn("Column33", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn33)
            Me.columnColumn34 = New Global.System.Data.DataColumn("Column34", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn34)
            Me.columnColumn35 = New Global.System.Data.DataColumn("Column35", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn35)
            Me.columnColumn36 = New Global.System.Data.DataColumn("Column36", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn36)
            Me.columnColumn37 = New Global.System.Data.DataColumn("Column37", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn37)
            Me.columnColumn38 = New Global.System.Data.DataColumn("Column38", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn38)
            Me.columnColumn39 = New Global.System.Data.DataColumn("Column39", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn39)
            Me.columnColumn40 = New Global.System.Data.DataColumn("Column40", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn40)
            Me.columnColumn41 = New Global.System.Data.DataColumn("Column41", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn41)
            Me.columnColumn42 = New Global.System.Data.DataColumn("Column42", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn42)
            Me.columnColumn43 = New Global.System.Data.DataColumn("Column43", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn43)
            Me.columnColumn44 = New Global.System.Data.DataColumn("Column44", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn44)
            Me.columnColumn45 = New Global.System.Data.DataColumn("Column45", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn45)
            Me.columnColumn46 = New Global.System.Data.DataColumn("Column46", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn46)
            Me.columnColumn47 = New Global.System.Data.DataColumn("Column47", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn47)
            Me.columnColumn48 = New Global.System.Data.DataColumn("Column48", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn48)
            Me.columnColumn49 = New Global.System.Data.DataColumn("Column49", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn49)
            Me.columnColumn50 = New Global.System.Data.DataColumn("Column50", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn50)
            Me.columnColumn51 = New Global.System.Data.DataColumn("Column51", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn51)
            Me.columnColumn52 = New Global.System.Data.DataColumn("Column52", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn52)
            Me.columnColumn53 = New Global.System.Data.DataColumn("Column53", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn53)
            Me.columnColumn54 = New Global.System.Data.DataColumn("Column54", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn54)
            Me.columnColumn55 = New Global.System.Data.DataColumn("Column55", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn55)
            Me.columnColumn56 = New Global.System.Data.DataColumn("Column56", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn56)
            Me.columnColumn57 = New Global.System.Data.DataColumn("Column57", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn57)
            Me.columnColumn58 = New Global.System.Data.DataColumn("Column58", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn58)
            Me.columnColumn59 = New Global.System.Data.DataColumn("Column59", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn59)
            Me.columnColumn60 = New Global.System.Data.DataColumn("Column60", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn60)
            Me.columnColumn61 = New Global.System.Data.DataColumn("Column61", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn61)
            Me.columnColumn62 = New Global.System.Data.DataColumn("Column62", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn62)
            Me.columnColumn63 = New Global.System.Data.DataColumn("Column63", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn63)
            Me.columnColumn64 = New Global.System.Data.DataColumn("Column64", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn64)
            Me.columnColumn65 = New Global.System.Data.DataColumn("Column65", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn65)
            Me.columnColumn66 = New Global.System.Data.DataColumn("Column66", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn66)
            Me.columnColumn67 = New Global.System.Data.DataColumn("Column67", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn67)
            Me.columnColumn68 = New Global.System.Data.DataColumn("Column68", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn68)
            Me.columnColumn69 = New Global.System.Data.DataColumn("Column69", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn69)
            Me.columnColumn70 = New Global.System.Data.DataColumn("Column70", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn70)
            Me.columnColumn71 = New Global.System.Data.DataColumn("Column71", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn71)
            Me.columnColumn72 = New Global.System.Data.DataColumn("Column72", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn72)
            Me.columnColumn73 = New Global.System.Data.DataColumn("Column73", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn73)
            Me.columnColumn74 = New Global.System.Data.DataColumn("Column74", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn74)
            Me.columnColumn75 = New Global.System.Data.DataColumn("Column75", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn75)
            Me.columnColumn76 = New Global.System.Data.DataColumn("Column76", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn76)
            Me.columnColumn77 = New Global.System.Data.DataColumn("Column77", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn77)
            Me.columnColumn78 = New Global.System.Data.DataColumn("Column78", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn78)
            Me.columnColumn79 = New Global.System.Data.DataColumn("Column79", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn79)
            Me.columnColumn80 = New Global.System.Data.DataColumn("Column80", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn80)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewTable1Row() As Table1Row
            Return CType(Me.NewRow,Table1Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New Table1Row(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(Table1Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.Table1RowChangedEvent) Is Nothing) Then
                RaiseEvent Table1RowChanged(Me, New Table1RowChangeEvent(CType(e.Row,Table1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.Table1RowChangingEvent) Is Nothing) Then
                RaiseEvent Table1RowChanging(Me, New Table1RowChangeEvent(CType(e.Row,Table1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.Table1RowDeletedEvent) Is Nothing) Then
                RaiseEvent Table1RowDeleted(Me, New Table1RowChangeEvent(CType(e.Row,Table1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.Table1RowDeletingEvent) Is Nothing) Then
                RaiseEvent Table1RowDeleting(Me, New Table1RowChangeEvent(CType(e.Row,Table1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveTable1Row(ByVal row As Table1Row)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As ReportData = New ReportData
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "Table1DataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class Table2DataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnColumn1 As Global.System.Data.DataColumn
        
        Private columnColumn2 As Global.System.Data.DataColumn
        
        Private columnColumn3 As Global.System.Data.DataColumn
        
        Private columnColumn4 As Global.System.Data.DataColumn
        
        Private columnColumn5 As Global.System.Data.DataColumn
        
        Private columnColumn6 As Global.System.Data.DataColumn
        
        Private columnColumn7 As Global.System.Data.DataColumn
        
        Private columnColumn8 As Global.System.Data.DataColumn
        
        Private columnColumn9 As Global.System.Data.DataColumn
        
        Private columnColumn10 As Global.System.Data.DataColumn
        
        Private columnColumn11 As Global.System.Data.DataColumn
        
        Private columnColumn12 As Global.System.Data.DataColumn
        
        Private columnColumn13 As Global.System.Data.DataColumn
        
        Private columnColumn14 As Global.System.Data.DataColumn
        
        Private columnColumn15 As Global.System.Data.DataColumn
        
        Private columnColumn16 As Global.System.Data.DataColumn
        
        Private columnColumn17 As Global.System.Data.DataColumn
        
        Private columnColumn18 As Global.System.Data.DataColumn
        
        Private columnColumn19 As Global.System.Data.DataColumn
        
        Private columnColumn20 As Global.System.Data.DataColumn
        
        Private columnColumn21 As Global.System.Data.DataColumn
        
        Private columnColumn22 As Global.System.Data.DataColumn
        
        Private columnColumn23 As Global.System.Data.DataColumn
        
        Private columnColumn24 As Global.System.Data.DataColumn
        
        Private columnColumn25 As Global.System.Data.DataColumn
        
        Private columnColumn26 As Global.System.Data.DataColumn
        
        Private columnColumn27 As Global.System.Data.DataColumn
        
        Private columnColumn28 As Global.System.Data.DataColumn
        
        Private columnColumn29 As Global.System.Data.DataColumn
        
        Private columnColumn30 As Global.System.Data.DataColumn
        
        Private columnColumn31 As Global.System.Data.DataColumn
        
        Private columnColumn32 As Global.System.Data.DataColumn
        
        Private columnColumn33 As Global.System.Data.DataColumn
        
        Private columnColumn34 As Global.System.Data.DataColumn
        
        Private columnColumn35 As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Table2"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column5Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn5
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column6Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn6
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column7Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn7
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column8Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn8
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column9Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn9
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column10Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn10
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column11Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn11
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column12Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn12
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column13Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn13
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column14Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn14
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column15Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn15
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column16Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn16
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column17Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn17
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column18Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn18
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column19Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn19
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column20Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn20
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column21Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn21
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column22Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn22
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column23Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn23
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column24Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn24
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column25Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn25
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column26Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn26
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column27Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn27
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column28Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn28
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column29Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn29
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column30Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn30
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column31Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn31
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column32Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn32
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column33Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn33
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column34Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn34
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column35Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn35
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As Table2Row
            Get
                Return CType(Me.Rows(index),Table2Row)
            End Get
        End Property
        
        Public Event Table2RowChanging As Table2RowChangeEventHandler
        
        Public Event Table2RowChanged As Table2RowChangeEventHandler
        
        Public Event Table2RowDeleting As Table2RowChangeEventHandler
        
        Public Event Table2RowDeleted As Table2RowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddTable2Row(ByVal row As Table2Row)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddTable2Row( _
                    ByVal Column1 As String,  _
                    ByVal Column2 As String,  _
                    ByVal Column3 As String,  _
                    ByVal Column4 As String,  _
                    ByVal Column5 As String,  _
                    ByVal Column6 As String,  _
                    ByVal Column7 As String,  _
                    ByVal Column8 As String,  _
                    ByVal Column9 As String,  _
                    ByVal Column10 As String,  _
                    ByVal Column11 As String,  _
                    ByVal Column12 As String,  _
                    ByVal Column13 As String,  _
                    ByVal Column14 As String,  _
                    ByVal Column15 As String,  _
                    ByVal Column16 As String,  _
                    ByVal Column17 As String,  _
                    ByVal Column18 As String,  _
                    ByVal Column19 As String,  _
                    ByVal Column20 As String,  _
                    ByVal Column21 As String,  _
                    ByVal Column22 As String,  _
                    ByVal Column23 As String,  _
                    ByVal Column24 As String,  _
                    ByVal Column25 As String,  _
                    ByVal Column26 As String,  _
                    ByVal Column27 As String,  _
                    ByVal Column28 As String,  _
                    ByVal Column29 As String,  _
                    ByVal Column30 As String,  _
                    ByVal Column31 As String,  _
                    ByVal Column32 As String,  _
                    ByVal Column33 As String,  _
                    ByVal Column34 As String,  _
                    ByVal Column35 As String) As Table2Row
            Dim rowTable2Row As Table2Row = CType(Me.NewRow,Table2Row)
            Dim columnValuesArray() As Object = New Object() {Column1, Column2, Column3, Column4, Column5, Column6, Column7, Column8, Column9, Column10, Column11, Column12, Column13, Column14, Column15, Column16, Column17, Column18, Column19, Column20, Column21, Column22, Column23, Column24, Column25, Column26, Column27, Column28, Column29, Column30, Column31, Column32, Column33, Column34, Column35}
            rowTable2Row.ItemArray = columnValuesArray
            Me.Rows.Add(rowTable2Row)
            Return rowTable2Row
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As Table2DataTable = CType(MyBase.Clone,Table2DataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New Table2DataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnColumn1 = MyBase.Columns("Column1")
            Me.columnColumn2 = MyBase.Columns("Column2")
            Me.columnColumn3 = MyBase.Columns("Column3")
            Me.columnColumn4 = MyBase.Columns("Column4")
            Me.columnColumn5 = MyBase.Columns("Column5")
            Me.columnColumn6 = MyBase.Columns("Column6")
            Me.columnColumn7 = MyBase.Columns("Column7")
            Me.columnColumn8 = MyBase.Columns("Column8")
            Me.columnColumn9 = MyBase.Columns("Column9")
            Me.columnColumn10 = MyBase.Columns("Column10")
            Me.columnColumn11 = MyBase.Columns("Column11")
            Me.columnColumn12 = MyBase.Columns("Column12")
            Me.columnColumn13 = MyBase.Columns("Column13")
            Me.columnColumn14 = MyBase.Columns("Column14")
            Me.columnColumn15 = MyBase.Columns("Column15")
            Me.columnColumn16 = MyBase.Columns("Column16")
            Me.columnColumn17 = MyBase.Columns("Column17")
            Me.columnColumn18 = MyBase.Columns("Column18")
            Me.columnColumn19 = MyBase.Columns("Column19")
            Me.columnColumn20 = MyBase.Columns("Column20")
            Me.columnColumn21 = MyBase.Columns("Column21")
            Me.columnColumn22 = MyBase.Columns("Column22")
            Me.columnColumn23 = MyBase.Columns("Column23")
            Me.columnColumn24 = MyBase.Columns("Column24")
            Me.columnColumn25 = MyBase.Columns("Column25")
            Me.columnColumn26 = MyBase.Columns("Column26")
            Me.columnColumn27 = MyBase.Columns("Column27")
            Me.columnColumn28 = MyBase.Columns("Column28")
            Me.columnColumn29 = MyBase.Columns("Column29")
            Me.columnColumn30 = MyBase.Columns("Column30")
            Me.columnColumn31 = MyBase.Columns("Column31")
            Me.columnColumn32 = MyBase.Columns("Column32")
            Me.columnColumn33 = MyBase.Columns("Column33")
            Me.columnColumn34 = MyBase.Columns("Column34")
            Me.columnColumn35 = MyBase.Columns("Column35")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnColumn1 = New Global.System.Data.DataColumn("Column1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn1)
            Me.columnColumn2 = New Global.System.Data.DataColumn("Column2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn2)
            Me.columnColumn3 = New Global.System.Data.DataColumn("Column3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn3)
            Me.columnColumn4 = New Global.System.Data.DataColumn("Column4", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn4)
            Me.columnColumn5 = New Global.System.Data.DataColumn("Column5", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn5)
            Me.columnColumn6 = New Global.System.Data.DataColumn("Column6", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn6)
            Me.columnColumn7 = New Global.System.Data.DataColumn("Column7", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn7)
            Me.columnColumn8 = New Global.System.Data.DataColumn("Column8", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn8)
            Me.columnColumn9 = New Global.System.Data.DataColumn("Column9", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn9)
            Me.columnColumn10 = New Global.System.Data.DataColumn("Column10", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn10)
            Me.columnColumn11 = New Global.System.Data.DataColumn("Column11", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn11)
            Me.columnColumn12 = New Global.System.Data.DataColumn("Column12", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn12)
            Me.columnColumn13 = New Global.System.Data.DataColumn("Column13", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn13)
            Me.columnColumn14 = New Global.System.Data.DataColumn("Column14", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn14)
            Me.columnColumn15 = New Global.System.Data.DataColumn("Column15", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn15)
            Me.columnColumn16 = New Global.System.Data.DataColumn("Column16", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn16)
            Me.columnColumn17 = New Global.System.Data.DataColumn("Column17", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn17)
            Me.columnColumn18 = New Global.System.Data.DataColumn("Column18", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn18)
            Me.columnColumn19 = New Global.System.Data.DataColumn("Column19", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn19)
            Me.columnColumn20 = New Global.System.Data.DataColumn("Column20", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn20)
            Me.columnColumn21 = New Global.System.Data.DataColumn("Column21", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn21)
            Me.columnColumn22 = New Global.System.Data.DataColumn("Column22", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn22)
            Me.columnColumn23 = New Global.System.Data.DataColumn("Column23", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn23)
            Me.columnColumn24 = New Global.System.Data.DataColumn("Column24", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn24)
            Me.columnColumn25 = New Global.System.Data.DataColumn("Column25", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn25)
            Me.columnColumn26 = New Global.System.Data.DataColumn("Column26", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn26)
            Me.columnColumn27 = New Global.System.Data.DataColumn("Column27", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn27)
            Me.columnColumn28 = New Global.System.Data.DataColumn("Column28", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn28)
            Me.columnColumn29 = New Global.System.Data.DataColumn("Column29", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn29)
            Me.columnColumn30 = New Global.System.Data.DataColumn("Column30", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn30)
            Me.columnColumn31 = New Global.System.Data.DataColumn("Column31", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn31)
            Me.columnColumn32 = New Global.System.Data.DataColumn("Column32", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn32)
            Me.columnColumn33 = New Global.System.Data.DataColumn("Column33", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn33)
            Me.columnColumn34 = New Global.System.Data.DataColumn("Column34", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn34)
            Me.columnColumn35 = New Global.System.Data.DataColumn("Column35", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn35)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewTable2Row() As Table2Row
            Return CType(Me.NewRow,Table2Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New Table2Row(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(Table2Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.Table2RowChangedEvent) Is Nothing) Then
                RaiseEvent Table2RowChanged(Me, New Table2RowChangeEvent(CType(e.Row,Table2Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.Table2RowChangingEvent) Is Nothing) Then
                RaiseEvent Table2RowChanging(Me, New Table2RowChangeEvent(CType(e.Row,Table2Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.Table2RowDeletedEvent) Is Nothing) Then
                RaiseEvent Table2RowDeleted(Me, New Table2RowChangeEvent(CType(e.Row,Table2Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.Table2RowDeletingEvent) Is Nothing) Then
                RaiseEvent Table2RowDeleting(Me, New Table2RowChangeEvent(CType(e.Row,Table2Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveTable2Row(ByVal row As Table2Row)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As ReportData = New ReportData
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "Table2DataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class Table3DataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnColumn1 As Global.System.Data.DataColumn
        
        Private columnColumn2 As Global.System.Data.DataColumn
        
        Private columnColumn3 As Global.System.Data.DataColumn
        
        Private columnColumn4 As Global.System.Data.DataColumn
        
        Private columnColumn5 As Global.System.Data.DataColumn
        
        Private columnColumn6 As Global.System.Data.DataColumn
        
        Private columnColumn7 As Global.System.Data.DataColumn
        
        Private columnColumn8 As Global.System.Data.DataColumn
        
        Private columnColumn9 As Global.System.Data.DataColumn
        
        Private columnColumn10 As Global.System.Data.DataColumn
        
        Private columnColumn11 As Global.System.Data.DataColumn
        
        Private columnColumn12 As Global.System.Data.DataColumn
        
        Private columnColumn13 As Global.System.Data.DataColumn
        
        Private columnColumn14 As Global.System.Data.DataColumn
        
        Private columnColumn15 As Global.System.Data.DataColumn
        
        Private columnColumn16 As Global.System.Data.DataColumn
        
        Private columnColumn17 As Global.System.Data.DataColumn
        
        Private columnColumn18 As Global.System.Data.DataColumn
        
        Private columnColumn19 As Global.System.Data.DataColumn
        
        Private columnColumn20 As Global.System.Data.DataColumn
        
        Private columnColumn21 As Global.System.Data.DataColumn
        
        Private columnColumn22 As Global.System.Data.DataColumn
        
        Private columnColumn23 As Global.System.Data.DataColumn
        
        Private columnColumn24 As Global.System.Data.DataColumn
        
        Private columnColumn25 As Global.System.Data.DataColumn
        
        Private columnColumn26 As Global.System.Data.DataColumn
        
        Private columnColumn27 As Global.System.Data.DataColumn
        
        Private columnColumn28 As Global.System.Data.DataColumn
        
        Private columnColumn29 As Global.System.Data.DataColumn
        
        Private columnColumn30 As Global.System.Data.DataColumn
        
        Private columnColumn31 As Global.System.Data.DataColumn
        
        Private columnColumn32 As Global.System.Data.DataColumn
        
        Private columnColumn33 As Global.System.Data.DataColumn
        
        Private columnColumn34 As Global.System.Data.DataColumn
        
        Private columnColumn35 As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Table3"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column5Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn5
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column6Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn6
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column7Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn7
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column8Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn8
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column9Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn9
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column10Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn10
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column11Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn11
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column12Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn12
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column13Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn13
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column14Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn14
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column15Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn15
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column16Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn16
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column17Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn17
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column18Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn18
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column19Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn19
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column20Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn20
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column21Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn21
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column22Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn22
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column23Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn23
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column24Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn24
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column25Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn25
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column26Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn26
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column27Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn27
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column28Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn28
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column29Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn29
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column30Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn30
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column31Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn31
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column32Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn32
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column33Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn33
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column34Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn34
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column35Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn35
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As Table3Row
            Get
                Return CType(Me.Rows(index),Table3Row)
            End Get
        End Property
        
        Public Event Table3RowChanging As Table3RowChangeEventHandler
        
        Public Event Table3RowChanged As Table3RowChangeEventHandler
        
        Public Event Table3RowDeleting As Table3RowChangeEventHandler
        
        Public Event Table3RowDeleted As Table3RowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddTable3Row(ByVal row As Table3Row)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddTable3Row( _
                    ByVal Column1 As String,  _
                    ByVal Column2 As String,  _
                    ByVal Column3 As String,  _
                    ByVal Column4 As String,  _
                    ByVal Column5 As String,  _
                    ByVal Column6 As String,  _
                    ByVal Column7 As String,  _
                    ByVal Column8 As String,  _
                    ByVal Column9 As String,  _
                    ByVal Column10 As String,  _
                    ByVal Column11 As String,  _
                    ByVal Column12 As String,  _
                    ByVal Column13 As String,  _
                    ByVal Column14 As String,  _
                    ByVal Column15 As String,  _
                    ByVal Column16 As String,  _
                    ByVal Column17 As String,  _
                    ByVal Column18 As String,  _
                    ByVal Column19 As String,  _
                    ByVal Column20 As String,  _
                    ByVal Column21 As String,  _
                    ByVal Column22 As String,  _
                    ByVal Column23 As String,  _
                    ByVal Column24 As String,  _
                    ByVal Column25 As String,  _
                    ByVal Column26 As String,  _
                    ByVal Column27 As String,  _
                    ByVal Column28 As String,  _
                    ByVal Column29 As String,  _
                    ByVal Column30 As String,  _
                    ByVal Column31 As String,  _
                    ByVal Column32 As String,  _
                    ByVal Column33 As String,  _
                    ByVal Column34 As String,  _
                    ByVal Column35 As String) As Table3Row
            Dim rowTable3Row As Table3Row = CType(Me.NewRow,Table3Row)
            Dim columnValuesArray() As Object = New Object() {Column1, Column2, Column3, Column4, Column5, Column6, Column7, Column8, Column9, Column10, Column11, Column12, Column13, Column14, Column15, Column16, Column17, Column18, Column19, Column20, Column21, Column22, Column23, Column24, Column25, Column26, Column27, Column28, Column29, Column30, Column31, Column32, Column33, Column34, Column35}
            rowTable3Row.ItemArray = columnValuesArray
            Me.Rows.Add(rowTable3Row)
            Return rowTable3Row
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As Table3DataTable = CType(MyBase.Clone,Table3DataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New Table3DataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnColumn1 = MyBase.Columns("Column1")
            Me.columnColumn2 = MyBase.Columns("Column2")
            Me.columnColumn3 = MyBase.Columns("Column3")
            Me.columnColumn4 = MyBase.Columns("Column4")
            Me.columnColumn5 = MyBase.Columns("Column5")
            Me.columnColumn6 = MyBase.Columns("Column6")
            Me.columnColumn7 = MyBase.Columns("Column7")
            Me.columnColumn8 = MyBase.Columns("Column8")
            Me.columnColumn9 = MyBase.Columns("Column9")
            Me.columnColumn10 = MyBase.Columns("Column10")
            Me.columnColumn11 = MyBase.Columns("Column11")
            Me.columnColumn12 = MyBase.Columns("Column12")
            Me.columnColumn13 = MyBase.Columns("Column13")
            Me.columnColumn14 = MyBase.Columns("Column14")
            Me.columnColumn15 = MyBase.Columns("Column15")
            Me.columnColumn16 = MyBase.Columns("Column16")
            Me.columnColumn17 = MyBase.Columns("Column17")
            Me.columnColumn18 = MyBase.Columns("Column18")
            Me.columnColumn19 = MyBase.Columns("Column19")
            Me.columnColumn20 = MyBase.Columns("Column20")
            Me.columnColumn21 = MyBase.Columns("Column21")
            Me.columnColumn22 = MyBase.Columns("Column22")
            Me.columnColumn23 = MyBase.Columns("Column23")
            Me.columnColumn24 = MyBase.Columns("Column24")
            Me.columnColumn25 = MyBase.Columns("Column25")
            Me.columnColumn26 = MyBase.Columns("Column26")
            Me.columnColumn27 = MyBase.Columns("Column27")
            Me.columnColumn28 = MyBase.Columns("Column28")
            Me.columnColumn29 = MyBase.Columns("Column29")
            Me.columnColumn30 = MyBase.Columns("Column30")
            Me.columnColumn31 = MyBase.Columns("Column31")
            Me.columnColumn32 = MyBase.Columns("Column32")
            Me.columnColumn33 = MyBase.Columns("Column33")
            Me.columnColumn34 = MyBase.Columns("Column34")
            Me.columnColumn35 = MyBase.Columns("Column35")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnColumn1 = New Global.System.Data.DataColumn("Column1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn1)
            Me.columnColumn2 = New Global.System.Data.DataColumn("Column2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn2)
            Me.columnColumn3 = New Global.System.Data.DataColumn("Column3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn3)
            Me.columnColumn4 = New Global.System.Data.DataColumn("Column4", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn4)
            Me.columnColumn5 = New Global.System.Data.DataColumn("Column5", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn5)
            Me.columnColumn6 = New Global.System.Data.DataColumn("Column6", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn6)
            Me.columnColumn7 = New Global.System.Data.DataColumn("Column7", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn7)
            Me.columnColumn8 = New Global.System.Data.DataColumn("Column8", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn8)
            Me.columnColumn9 = New Global.System.Data.DataColumn("Column9", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn9)
            Me.columnColumn10 = New Global.System.Data.DataColumn("Column10", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn10)
            Me.columnColumn11 = New Global.System.Data.DataColumn("Column11", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn11)
            Me.columnColumn12 = New Global.System.Data.DataColumn("Column12", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn12)
            Me.columnColumn13 = New Global.System.Data.DataColumn("Column13", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn13)
            Me.columnColumn14 = New Global.System.Data.DataColumn("Column14", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn14)
            Me.columnColumn15 = New Global.System.Data.DataColumn("Column15", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn15)
            Me.columnColumn16 = New Global.System.Data.DataColumn("Column16", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn16)
            Me.columnColumn17 = New Global.System.Data.DataColumn("Column17", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn17)
            Me.columnColumn18 = New Global.System.Data.DataColumn("Column18", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn18)
            Me.columnColumn19 = New Global.System.Data.DataColumn("Column19", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn19)
            Me.columnColumn20 = New Global.System.Data.DataColumn("Column20", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn20)
            Me.columnColumn21 = New Global.System.Data.DataColumn("Column21", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn21)
            Me.columnColumn22 = New Global.System.Data.DataColumn("Column22", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn22)
            Me.columnColumn23 = New Global.System.Data.DataColumn("Column23", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn23)
            Me.columnColumn24 = New Global.System.Data.DataColumn("Column24", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn24)
            Me.columnColumn25 = New Global.System.Data.DataColumn("Column25", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn25)
            Me.columnColumn26 = New Global.System.Data.DataColumn("Column26", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn26)
            Me.columnColumn27 = New Global.System.Data.DataColumn("Column27", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn27)
            Me.columnColumn28 = New Global.System.Data.DataColumn("Column28", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn28)
            Me.columnColumn29 = New Global.System.Data.DataColumn("Column29", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn29)
            Me.columnColumn30 = New Global.System.Data.DataColumn("Column30", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn30)
            Me.columnColumn31 = New Global.System.Data.DataColumn("Column31", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn31)
            Me.columnColumn32 = New Global.System.Data.DataColumn("Column32", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn32)
            Me.columnColumn33 = New Global.System.Data.DataColumn("Column33", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn33)
            Me.columnColumn34 = New Global.System.Data.DataColumn("Column34", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn34)
            Me.columnColumn35 = New Global.System.Data.DataColumn("Column35", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn35)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewTable3Row() As Table3Row
            Return CType(Me.NewRow,Table3Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New Table3Row(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(Table3Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.Table3RowChangedEvent) Is Nothing) Then
                RaiseEvent Table3RowChanged(Me, New Table3RowChangeEvent(CType(e.Row,Table3Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.Table3RowChangingEvent) Is Nothing) Then
                RaiseEvent Table3RowChanging(Me, New Table3RowChangeEvent(CType(e.Row,Table3Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.Table3RowDeletedEvent) Is Nothing) Then
                RaiseEvent Table3RowDeleted(Me, New Table3RowChangeEvent(CType(e.Row,Table3Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.Table3RowDeletingEvent) Is Nothing) Then
                RaiseEvent Table3RowDeleting(Me, New Table3RowChangeEvent(CType(e.Row,Table3Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveTable3Row(ByVal row As Table3Row)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As ReportData = New ReportData
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "Table3DataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class Table4DataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnColumn1 As Global.System.Data.DataColumn
        
        Private columnColumn2 As Global.System.Data.DataColumn
        
        Private columnColumn3 As Global.System.Data.DataColumn
        
        Private columnColumn4 As Global.System.Data.DataColumn
        
        Private columnColumn5 As Global.System.Data.DataColumn
        
        Private columnColumn6 As Global.System.Data.DataColumn
        
        Private columnColumn7 As Global.System.Data.DataColumn
        
        Private columnColumn8 As Global.System.Data.DataColumn
        
        Private columnColumn9 As Global.System.Data.DataColumn
        
        Private columnColumn10 As Global.System.Data.DataColumn
        
        Private columnColumn11 As Global.System.Data.DataColumn
        
        Private columnColumn12 As Global.System.Data.DataColumn
        
        Private columnColumn13 As Global.System.Data.DataColumn
        
        Private columnColumn14 As Global.System.Data.DataColumn
        
        Private columnColumn15 As Global.System.Data.DataColumn
        
        Private columnColumn16 As Global.System.Data.DataColumn
        
        Private columnColumn17 As Global.System.Data.DataColumn
        
        Private columnColumn18 As Global.System.Data.DataColumn
        
        Private columnColumn19 As Global.System.Data.DataColumn
        
        Private columnColumn20 As Global.System.Data.DataColumn
        
        Private columnColumn21 As Global.System.Data.DataColumn
        
        Private columnColumn22 As Global.System.Data.DataColumn
        
        Private columnColumn23 As Global.System.Data.DataColumn
        
        Private columnColumn24 As Global.System.Data.DataColumn
        
        Private columnColumn25 As Global.System.Data.DataColumn
        
        Private columnColumn26 As Global.System.Data.DataColumn
        
        Private columnColumn27 As Global.System.Data.DataColumn
        
        Private columnColumn28 As Global.System.Data.DataColumn
        
        Private columnColumn29 As Global.System.Data.DataColumn
        
        Private columnColumn30 As Global.System.Data.DataColumn
        
        Private columnColumn31 As Global.System.Data.DataColumn
        
        Private columnColumn32 As Global.System.Data.DataColumn
        
        Private columnColumn33 As Global.System.Data.DataColumn
        
        Private columnColumn34 As Global.System.Data.DataColumn
        
        Private columnColumn35 As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Table4"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column5Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn5
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column6Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn6
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column7Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn7
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column8Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn8
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column9Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn9
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column10Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn10
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column11Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn11
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column12Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn12
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column13Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn13
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column14Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn14
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column15Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn15
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column16Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn16
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column17Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn17
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column18Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn18
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column19Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn19
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column20Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn20
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column21Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn21
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column22Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn22
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column23Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn23
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column24Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn24
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column25Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn25
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column26Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn26
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column27Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn27
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column28Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn28
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column29Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn29
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column30Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn30
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column31Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn31
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column32Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn32
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column33Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn33
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column34Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn34
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column35Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn35
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As Table4Row
            Get
                Return CType(Me.Rows(index),Table4Row)
            End Get
        End Property
        
        Public Event Table4RowChanging As Table4RowChangeEventHandler
        
        Public Event Table4RowChanged As Table4RowChangeEventHandler
        
        Public Event Table4RowDeleting As Table4RowChangeEventHandler
        
        Public Event Table4RowDeleted As Table4RowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddTable4Row(ByVal row As Table4Row)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddTable4Row( _
                    ByVal Column1 As String,  _
                    ByVal Column2 As String,  _
                    ByVal Column3 As String,  _
                    ByVal Column4 As String,  _
                    ByVal Column5 As String,  _
                    ByVal Column6 As String,  _
                    ByVal Column7 As String,  _
                    ByVal Column8 As String,  _
                    ByVal Column9 As String,  _
                    ByVal Column10 As String,  _
                    ByVal Column11 As String,  _
                    ByVal Column12 As String,  _
                    ByVal Column13 As String,  _
                    ByVal Column14 As String,  _
                    ByVal Column15 As String,  _
                    ByVal Column16 As String,  _
                    ByVal Column17 As String,  _
                    ByVal Column18 As String,  _
                    ByVal Column19 As String,  _
                    ByVal Column20 As String,  _
                    ByVal Column21 As String,  _
                    ByVal Column22 As String,  _
                    ByVal Column23 As String,  _
                    ByVal Column24 As String,  _
                    ByVal Column25 As String,  _
                    ByVal Column26 As String,  _
                    ByVal Column27 As String,  _
                    ByVal Column28 As String,  _
                    ByVal Column29 As String,  _
                    ByVal Column30 As String,  _
                    ByVal Column31 As String,  _
                    ByVal Column32 As String,  _
                    ByVal Column33 As String,  _
                    ByVal Column34 As String,  _
                    ByVal Column35 As String) As Table4Row
            Dim rowTable4Row As Table4Row = CType(Me.NewRow,Table4Row)
            Dim columnValuesArray() As Object = New Object() {Column1, Column2, Column3, Column4, Column5, Column6, Column7, Column8, Column9, Column10, Column11, Column12, Column13, Column14, Column15, Column16, Column17, Column18, Column19, Column20, Column21, Column22, Column23, Column24, Column25, Column26, Column27, Column28, Column29, Column30, Column31, Column32, Column33, Column34, Column35}
            rowTable4Row.ItemArray = columnValuesArray
            Me.Rows.Add(rowTable4Row)
            Return rowTable4Row
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As Table4DataTable = CType(MyBase.Clone,Table4DataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New Table4DataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnColumn1 = MyBase.Columns("Column1")
            Me.columnColumn2 = MyBase.Columns("Column2")
            Me.columnColumn3 = MyBase.Columns("Column3")
            Me.columnColumn4 = MyBase.Columns("Column4")
            Me.columnColumn5 = MyBase.Columns("Column5")
            Me.columnColumn6 = MyBase.Columns("Column6")
            Me.columnColumn7 = MyBase.Columns("Column7")
            Me.columnColumn8 = MyBase.Columns("Column8")
            Me.columnColumn9 = MyBase.Columns("Column9")
            Me.columnColumn10 = MyBase.Columns("Column10")
            Me.columnColumn11 = MyBase.Columns("Column11")
            Me.columnColumn12 = MyBase.Columns("Column12")
            Me.columnColumn13 = MyBase.Columns("Column13")
            Me.columnColumn14 = MyBase.Columns("Column14")
            Me.columnColumn15 = MyBase.Columns("Column15")
            Me.columnColumn16 = MyBase.Columns("Column16")
            Me.columnColumn17 = MyBase.Columns("Column17")
            Me.columnColumn18 = MyBase.Columns("Column18")
            Me.columnColumn19 = MyBase.Columns("Column19")
            Me.columnColumn20 = MyBase.Columns("Column20")
            Me.columnColumn21 = MyBase.Columns("Column21")
            Me.columnColumn22 = MyBase.Columns("Column22")
            Me.columnColumn23 = MyBase.Columns("Column23")
            Me.columnColumn24 = MyBase.Columns("Column24")
            Me.columnColumn25 = MyBase.Columns("Column25")
            Me.columnColumn26 = MyBase.Columns("Column26")
            Me.columnColumn27 = MyBase.Columns("Column27")
            Me.columnColumn28 = MyBase.Columns("Column28")
            Me.columnColumn29 = MyBase.Columns("Column29")
            Me.columnColumn30 = MyBase.Columns("Column30")
            Me.columnColumn31 = MyBase.Columns("Column31")
            Me.columnColumn32 = MyBase.Columns("Column32")
            Me.columnColumn33 = MyBase.Columns("Column33")
            Me.columnColumn34 = MyBase.Columns("Column34")
            Me.columnColumn35 = MyBase.Columns("Column35")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnColumn1 = New Global.System.Data.DataColumn("Column1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn1)
            Me.columnColumn2 = New Global.System.Data.DataColumn("Column2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn2)
            Me.columnColumn3 = New Global.System.Data.DataColumn("Column3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn3)
            Me.columnColumn4 = New Global.System.Data.DataColumn("Column4", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn4)
            Me.columnColumn5 = New Global.System.Data.DataColumn("Column5", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn5)
            Me.columnColumn6 = New Global.System.Data.DataColumn("Column6", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn6)
            Me.columnColumn7 = New Global.System.Data.DataColumn("Column7", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn7)
            Me.columnColumn8 = New Global.System.Data.DataColumn("Column8", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn8)
            Me.columnColumn9 = New Global.System.Data.DataColumn("Column9", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn9)
            Me.columnColumn10 = New Global.System.Data.DataColumn("Column10", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn10)
            Me.columnColumn11 = New Global.System.Data.DataColumn("Column11", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn11)
            Me.columnColumn12 = New Global.System.Data.DataColumn("Column12", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn12)
            Me.columnColumn13 = New Global.System.Data.DataColumn("Column13", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn13)
            Me.columnColumn14 = New Global.System.Data.DataColumn("Column14", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn14)
            Me.columnColumn15 = New Global.System.Data.DataColumn("Column15", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn15)
            Me.columnColumn16 = New Global.System.Data.DataColumn("Column16", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn16)
            Me.columnColumn17 = New Global.System.Data.DataColumn("Column17", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn17)
            Me.columnColumn18 = New Global.System.Data.DataColumn("Column18", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn18)
            Me.columnColumn19 = New Global.System.Data.DataColumn("Column19", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn19)
            Me.columnColumn20 = New Global.System.Data.DataColumn("Column20", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn20)
            Me.columnColumn21 = New Global.System.Data.DataColumn("Column21", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn21)
            Me.columnColumn22 = New Global.System.Data.DataColumn("Column22", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn22)
            Me.columnColumn23 = New Global.System.Data.DataColumn("Column23", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn23)
            Me.columnColumn24 = New Global.System.Data.DataColumn("Column24", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn24)
            Me.columnColumn25 = New Global.System.Data.DataColumn("Column25", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn25)
            Me.columnColumn26 = New Global.System.Data.DataColumn("Column26", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn26)
            Me.columnColumn27 = New Global.System.Data.DataColumn("Column27", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn27)
            Me.columnColumn28 = New Global.System.Data.DataColumn("Column28", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn28)
            Me.columnColumn29 = New Global.System.Data.DataColumn("Column29", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn29)
            Me.columnColumn30 = New Global.System.Data.DataColumn("Column30", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn30)
            Me.columnColumn31 = New Global.System.Data.DataColumn("Column31", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn31)
            Me.columnColumn32 = New Global.System.Data.DataColumn("Column32", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn32)
            Me.columnColumn33 = New Global.System.Data.DataColumn("Column33", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn33)
            Me.columnColumn34 = New Global.System.Data.DataColumn("Column34", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn34)
            Me.columnColumn35 = New Global.System.Data.DataColumn("Column35", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn35)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewTable4Row() As Table4Row
            Return CType(Me.NewRow,Table4Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New Table4Row(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(Table4Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.Table4RowChangedEvent) Is Nothing) Then
                RaiseEvent Table4RowChanged(Me, New Table4RowChangeEvent(CType(e.Row,Table4Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.Table4RowChangingEvent) Is Nothing) Then
                RaiseEvent Table4RowChanging(Me, New Table4RowChangeEvent(CType(e.Row,Table4Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.Table4RowDeletedEvent) Is Nothing) Then
                RaiseEvent Table4RowDeleted(Me, New Table4RowChangeEvent(CType(e.Row,Table4Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.Table4RowDeletingEvent) Is Nothing) Then
                RaiseEvent Table4RowDeleting(Me, New Table4RowChangeEvent(CType(e.Row,Table4Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveTable4Row(ByVal row As Table4Row)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As ReportData = New ReportData
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "Table4DataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class TableCompanyDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnColumn1 As Global.System.Data.DataColumn
        
        Private columnColumn2 As Global.System.Data.DataColumn
        
        Private columnColumn3 As Global.System.Data.DataColumn
        
        Private columnColumn4 As Global.System.Data.DataColumn
        
        Private columnColumn5 As Global.System.Data.DataColumn
        
        Private columnColumn6 As Global.System.Data.DataColumn
        
        Private columnColumn7 As Global.System.Data.DataColumn
        
        Private columnColumn8 As Global.System.Data.DataColumn
        
        Private columnColumn9 As Global.System.Data.DataColumn
        
        Private columnColumn10 As Global.System.Data.DataColumn
        
        Private columnColumn11 As Global.System.Data.DataColumn
        
        Private columnColumn12 As Global.System.Data.DataColumn
        
        Private columnColumn13 As Global.System.Data.DataColumn
        
        Private columnColumn14 As Global.System.Data.DataColumn
        
        Private columnColumn15 As Global.System.Data.DataColumn
        
        Private columnColumn16 As Global.System.Data.DataColumn
        
        Private columnColumn17 As Global.System.Data.DataColumn
        
        Private columnColumn18 As Global.System.Data.DataColumn
        
        Private columnColumn19 As Global.System.Data.DataColumn
        
        Private columnColumn20 As Global.System.Data.DataColumn
        
        Private columnColumn21 As Global.System.Data.DataColumn
        
        Private columnColumn22 As Global.System.Data.DataColumn
        
        Private columnColumn23 As Global.System.Data.DataColumn
        
        Private columnColumn24 As Global.System.Data.DataColumn
        
        Private columnColumn25 As Global.System.Data.DataColumn
        
        Private columnColumn26 As Global.System.Data.DataColumn
        
        Private columnColumn27 As Global.System.Data.DataColumn
        
        Private columnColumn28 As Global.System.Data.DataColumn
        
        Private columnColumn29 As Global.System.Data.DataColumn
        
        Private columnColumn30 As Global.System.Data.DataColumn
        
        Private columnColumn31 As Global.System.Data.DataColumn
        
        Private columnColumn32 As Global.System.Data.DataColumn
        
        Private columnColumn33 As Global.System.Data.DataColumn
        
        Private columnColumn34 As Global.System.Data.DataColumn
        
        Private columnColumn35 As Global.System.Data.DataColumn
        
        Private columnColumn36 As Global.System.Data.DataColumn
        
        Private columnColumn37 As Global.System.Data.DataColumn
        
        Private columnColumn38 As Global.System.Data.DataColumn
        
        Private columnColumn39 As Global.System.Data.DataColumn
        
        Private columnColumn40 As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "TableCompany"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column5Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn5
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column6Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn6
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column7Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn7
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column8Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn8
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column9Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn9
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column10Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn10
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column11Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn11
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column12Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn12
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column13Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn13
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column14Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn14
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column15Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn15
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column16Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn16
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column17Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn17
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column18Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn18
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column19Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn19
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column20Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn20
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column21Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn21
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column22Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn22
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column23Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn23
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column24Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn24
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column25Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn25
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column26Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn26
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column27Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn27
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column28Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn28
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column29Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn29
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column30Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn30
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column31Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn31
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column32Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn32
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column33Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn33
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column34Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn34
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column35Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn35
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column36Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn36
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column37Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn37
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column38Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn38
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column39Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn39
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column40Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn40
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As TableCompanyRow
            Get
                Return CType(Me.Rows(index),TableCompanyRow)
            End Get
        End Property
        
        Public Event TableCompanyRowChanging As TableCompanyRowChangeEventHandler
        
        Public Event TableCompanyRowChanged As TableCompanyRowChangeEventHandler
        
        Public Event TableCompanyRowDeleting As TableCompanyRowChangeEventHandler
        
        Public Event TableCompanyRowDeleted As TableCompanyRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddTableCompanyRow(ByVal row As TableCompanyRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddTableCompanyRow( _
                    ByVal Column1 As String,  _
                    ByVal Column2 As String,  _
                    ByVal Column3 As String,  _
                    ByVal Column4 As String,  _
                    ByVal Column5 As String,  _
                    ByVal Column6 As String,  _
                    ByVal Column7 As String,  _
                    ByVal Column8 As String,  _
                    ByVal Column9 As String,  _
                    ByVal Column10 As String,  _
                    ByVal Column11 As String,  _
                    ByVal Column12 As String,  _
                    ByVal Column13 As String,  _
                    ByVal Column14 As String,  _
                    ByVal Column15 As String,  _
                    ByVal Column16 As String,  _
                    ByVal Column17 As String,  _
                    ByVal Column18 As String,  _
                    ByVal Column19 As String,  _
                    ByVal Column20 As String,  _
                    ByVal Column21 As String,  _
                    ByVal Column22 As String,  _
                    ByVal Column23 As String,  _
                    ByVal Column24 As String,  _
                    ByVal Column25 As String,  _
                    ByVal Column26 As String,  _
                    ByVal Column27 As String,  _
                    ByVal Column28 As String,  _
                    ByVal Column29 As String,  _
                    ByVal Column30 As String,  _
                    ByVal Column31 As String,  _
                    ByVal Column32 As String,  _
                    ByVal Column33 As String,  _
                    ByVal Column34 As String,  _
                    ByVal Column35 As String,  _
                    ByVal Column36 As String,  _
                    ByVal Column37 As String,  _
                    ByVal Column38 As String,  _
                    ByVal Column39 As String,  _
                    ByVal Column40 As String) As TableCompanyRow
            Dim rowTableCompanyRow As TableCompanyRow = CType(Me.NewRow,TableCompanyRow)
            Dim columnValuesArray() As Object = New Object() {Column1, Column2, Column3, Column4, Column5, Column6, Column7, Column8, Column9, Column10, Column11, Column12, Column13, Column14, Column15, Column16, Column17, Column18, Column19, Column20, Column21, Column22, Column23, Column24, Column25, Column26, Column27, Column28, Column29, Column30, Column31, Column32, Column33, Column34, Column35, Column36, Column37, Column38, Column39, Column40}
            rowTableCompanyRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowTableCompanyRow)
            Return rowTableCompanyRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As TableCompanyDataTable = CType(MyBase.Clone,TableCompanyDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New TableCompanyDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnColumn1 = MyBase.Columns("Column1")
            Me.columnColumn2 = MyBase.Columns("Column2")
            Me.columnColumn3 = MyBase.Columns("Column3")
            Me.columnColumn4 = MyBase.Columns("Column4")
            Me.columnColumn5 = MyBase.Columns("Column5")
            Me.columnColumn6 = MyBase.Columns("Column6")
            Me.columnColumn7 = MyBase.Columns("Column7")
            Me.columnColumn8 = MyBase.Columns("Column8")
            Me.columnColumn9 = MyBase.Columns("Column9")
            Me.columnColumn10 = MyBase.Columns("Column10")
            Me.columnColumn11 = MyBase.Columns("Column11")
            Me.columnColumn12 = MyBase.Columns("Column12")
            Me.columnColumn13 = MyBase.Columns("Column13")
            Me.columnColumn14 = MyBase.Columns("Column14")
            Me.columnColumn15 = MyBase.Columns("Column15")
            Me.columnColumn16 = MyBase.Columns("Column16")
            Me.columnColumn17 = MyBase.Columns("Column17")
            Me.columnColumn18 = MyBase.Columns("Column18")
            Me.columnColumn19 = MyBase.Columns("Column19")
            Me.columnColumn20 = MyBase.Columns("Column20")
            Me.columnColumn21 = MyBase.Columns("Column21")
            Me.columnColumn22 = MyBase.Columns("Column22")
            Me.columnColumn23 = MyBase.Columns("Column23")
            Me.columnColumn24 = MyBase.Columns("Column24")
            Me.columnColumn25 = MyBase.Columns("Column25")
            Me.columnColumn26 = MyBase.Columns("Column26")
            Me.columnColumn27 = MyBase.Columns("Column27")
            Me.columnColumn28 = MyBase.Columns("Column28")
            Me.columnColumn29 = MyBase.Columns("Column29")
            Me.columnColumn30 = MyBase.Columns("Column30")
            Me.columnColumn31 = MyBase.Columns("Column31")
            Me.columnColumn32 = MyBase.Columns("Column32")
            Me.columnColumn33 = MyBase.Columns("Column33")
            Me.columnColumn34 = MyBase.Columns("Column34")
            Me.columnColumn35 = MyBase.Columns("Column35")
            Me.columnColumn36 = MyBase.Columns("Column36")
            Me.columnColumn37 = MyBase.Columns("Column37")
            Me.columnColumn38 = MyBase.Columns("Column38")
            Me.columnColumn39 = MyBase.Columns("Column39")
            Me.columnColumn40 = MyBase.Columns("Column40")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnColumn1 = New Global.System.Data.DataColumn("Column1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn1)
            Me.columnColumn2 = New Global.System.Data.DataColumn("Column2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn2)
            Me.columnColumn3 = New Global.System.Data.DataColumn("Column3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn3)
            Me.columnColumn4 = New Global.System.Data.DataColumn("Column4", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn4)
            Me.columnColumn5 = New Global.System.Data.DataColumn("Column5", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn5)
            Me.columnColumn6 = New Global.System.Data.DataColumn("Column6", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn6)
            Me.columnColumn7 = New Global.System.Data.DataColumn("Column7", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn7)
            Me.columnColumn8 = New Global.System.Data.DataColumn("Column8", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn8)
            Me.columnColumn9 = New Global.System.Data.DataColumn("Column9", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn9)
            Me.columnColumn10 = New Global.System.Data.DataColumn("Column10", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn10)
            Me.columnColumn11 = New Global.System.Data.DataColumn("Column11", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn11)
            Me.columnColumn12 = New Global.System.Data.DataColumn("Column12", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn12)
            Me.columnColumn13 = New Global.System.Data.DataColumn("Column13", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn13)
            Me.columnColumn14 = New Global.System.Data.DataColumn("Column14", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn14)
            Me.columnColumn15 = New Global.System.Data.DataColumn("Column15", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn15)
            Me.columnColumn16 = New Global.System.Data.DataColumn("Column16", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn16)
            Me.columnColumn17 = New Global.System.Data.DataColumn("Column17", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn17)
            Me.columnColumn18 = New Global.System.Data.DataColumn("Column18", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn18)
            Me.columnColumn19 = New Global.System.Data.DataColumn("Column19", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn19)
            Me.columnColumn20 = New Global.System.Data.DataColumn("Column20", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn20)
            Me.columnColumn21 = New Global.System.Data.DataColumn("Column21", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn21)
            Me.columnColumn22 = New Global.System.Data.DataColumn("Column22", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn22)
            Me.columnColumn23 = New Global.System.Data.DataColumn("Column23", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn23)
            Me.columnColumn24 = New Global.System.Data.DataColumn("Column24", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn24)
            Me.columnColumn25 = New Global.System.Data.DataColumn("Column25", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn25)
            Me.columnColumn26 = New Global.System.Data.DataColumn("Column26", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn26)
            Me.columnColumn27 = New Global.System.Data.DataColumn("Column27", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn27)
            Me.columnColumn28 = New Global.System.Data.DataColumn("Column28", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn28)
            Me.columnColumn29 = New Global.System.Data.DataColumn("Column29", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn29)
            Me.columnColumn30 = New Global.System.Data.DataColumn("Column30", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn30)
            Me.columnColumn31 = New Global.System.Data.DataColumn("Column31", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn31)
            Me.columnColumn32 = New Global.System.Data.DataColumn("Column32", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn32)
            Me.columnColumn33 = New Global.System.Data.DataColumn("Column33", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn33)
            Me.columnColumn34 = New Global.System.Data.DataColumn("Column34", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn34)
            Me.columnColumn35 = New Global.System.Data.DataColumn("Column35", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn35)
            Me.columnColumn36 = New Global.System.Data.DataColumn("Column36", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn36)
            Me.columnColumn37 = New Global.System.Data.DataColumn("Column37", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn37)
            Me.columnColumn38 = New Global.System.Data.DataColumn("Column38", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn38)
            Me.columnColumn39 = New Global.System.Data.DataColumn("Column39", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn39)
            Me.columnColumn40 = New Global.System.Data.DataColumn("Column40", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn40)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewTableCompanyRow() As TableCompanyRow
            Return CType(Me.NewRow,TableCompanyRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New TableCompanyRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(TableCompanyRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.TableCompanyRowChangedEvent) Is Nothing) Then
                RaiseEvent TableCompanyRowChanged(Me, New TableCompanyRowChangeEvent(CType(e.Row,TableCompanyRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.TableCompanyRowChangingEvent) Is Nothing) Then
                RaiseEvent TableCompanyRowChanging(Me, New TableCompanyRowChangeEvent(CType(e.Row,TableCompanyRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.TableCompanyRowDeletedEvent) Is Nothing) Then
                RaiseEvent TableCompanyRowDeleted(Me, New TableCompanyRowChangeEvent(CType(e.Row,TableCompanyRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.TableCompanyRowDeletingEvent) Is Nothing) Then
                RaiseEvent TableCompanyRowDeleting(Me, New TableCompanyRowChangeEvent(CType(e.Row,TableCompanyRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveTableCompanyRow(ByVal row As TableCompanyRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As ReportData = New ReportData
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "TableCompanyDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class Table5DataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnColumn1 As Global.System.Data.DataColumn
        
        Private columnColumn2 As Global.System.Data.DataColumn
        
        Private columnColumn3 As Global.System.Data.DataColumn
        
        Private columnColumn4 As Global.System.Data.DataColumn
        
        Private columnColumn5 As Global.System.Data.DataColumn
        
        Private columnColumn6 As Global.System.Data.DataColumn
        
        Private columnColumn7 As Global.System.Data.DataColumn
        
        Private columnColumn8 As Global.System.Data.DataColumn
        
        Private columnColumn9 As Global.System.Data.DataColumn
        
        Private columnColumn10 As Global.System.Data.DataColumn
        
        Private columnColumn11 As Global.System.Data.DataColumn
        
        Private columnColumn12 As Global.System.Data.DataColumn
        
        Private columnColumn13 As Global.System.Data.DataColumn
        
        Private columnColumn14 As Global.System.Data.DataColumn
        
        Private columnColumn15 As Global.System.Data.DataColumn
        
        Private columnColumn16 As Global.System.Data.DataColumn
        
        Private columnColumn17 As Global.System.Data.DataColumn
        
        Private columnColumn18 As Global.System.Data.DataColumn
        
        Private columnColumn19 As Global.System.Data.DataColumn
        
        Private columnColumn20 As Global.System.Data.DataColumn
        
        Private columnColumn21 As Global.System.Data.DataColumn
        
        Private columnColumn22 As Global.System.Data.DataColumn
        
        Private columnColumn23 As Global.System.Data.DataColumn
        
        Private columnColumn24 As Global.System.Data.DataColumn
        
        Private columnColumn25 As Global.System.Data.DataColumn
        
        Private columnColumn26 As Global.System.Data.DataColumn
        
        Private columnColumn27 As Global.System.Data.DataColumn
        
        Private columnColumn28 As Global.System.Data.DataColumn
        
        Private columnColumn29 As Global.System.Data.DataColumn
        
        Private columnColumn30 As Global.System.Data.DataColumn
        
        Private columnColumn31 As Global.System.Data.DataColumn
        
        Private columnColumn32 As Global.System.Data.DataColumn
        
        Private columnColumn33 As Global.System.Data.DataColumn
        
        Private columnColumn34 As Global.System.Data.DataColumn
        
        Private columnColumn35 As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Table5"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column5Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn5
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column6Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn6
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column7Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn7
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column8Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn8
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column9Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn9
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column10Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn10
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column11Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn11
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column12Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn12
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column13Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn13
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column14Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn14
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column15Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn15
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column16Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn16
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column17Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn17
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column18Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn18
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column19Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn19
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column20Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn20
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column21Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn21
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column22Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn22
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column23Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn23
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column24Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn24
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column25Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn25
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column26Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn26
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column27Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn27
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column28Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn28
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column29Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn29
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column30Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn30
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column31Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn31
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column32Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn32
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column33Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn33
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column34Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn34
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column35Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn35
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As Table5Row
            Get
                Return CType(Me.Rows(index),Table5Row)
            End Get
        End Property
        
        Public Event Table5RowChanging As Table5RowChangeEventHandler
        
        Public Event Table5RowChanged As Table5RowChangeEventHandler
        
        Public Event Table5RowDeleting As Table5RowChangeEventHandler
        
        Public Event Table5RowDeleted As Table5RowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddTable5Row(ByVal row As Table5Row)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddTable5Row( _
                    ByVal Column1 As String,  _
                    ByVal Column2 As String,  _
                    ByVal Column3 As String,  _
                    ByVal Column4 As String,  _
                    ByVal Column5 As String,  _
                    ByVal Column6 As String,  _
                    ByVal Column7 As String,  _
                    ByVal Column8 As String,  _
                    ByVal Column9 As String,  _
                    ByVal Column10 As String,  _
                    ByVal Column11 As String,  _
                    ByVal Column12 As String,  _
                    ByVal Column13 As String,  _
                    ByVal Column14 As String,  _
                    ByVal Column15 As String,  _
                    ByVal Column16 As String,  _
                    ByVal Column17 As String,  _
                    ByVal Column18 As String,  _
                    ByVal Column19 As String,  _
                    ByVal Column20 As String,  _
                    ByVal Column21 As String,  _
                    ByVal Column22 As String,  _
                    ByVal Column23 As String,  _
                    ByVal Column24 As String,  _
                    ByVal Column25 As String,  _
                    ByVal Column26 As String,  _
                    ByVal Column27 As String,  _
                    ByVal Column28 As String,  _
                    ByVal Column29 As String,  _
                    ByVal Column30 As String,  _
                    ByVal Column31 As String,  _
                    ByVal Column32 As String,  _
                    ByVal Column33 As String,  _
                    ByVal Column34 As String,  _
                    ByVal Column35 As String) As Table5Row
            Dim rowTable5Row As Table5Row = CType(Me.NewRow,Table5Row)
            Dim columnValuesArray() As Object = New Object() {Column1, Column2, Column3, Column4, Column5, Column6, Column7, Column8, Column9, Column10, Column11, Column12, Column13, Column14, Column15, Column16, Column17, Column18, Column19, Column20, Column21, Column22, Column23, Column24, Column25, Column26, Column27, Column28, Column29, Column30, Column31, Column32, Column33, Column34, Column35}
            rowTable5Row.ItemArray = columnValuesArray
            Me.Rows.Add(rowTable5Row)
            Return rowTable5Row
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As Table5DataTable = CType(MyBase.Clone,Table5DataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New Table5DataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnColumn1 = MyBase.Columns("Column1")
            Me.columnColumn2 = MyBase.Columns("Column2")
            Me.columnColumn3 = MyBase.Columns("Column3")
            Me.columnColumn4 = MyBase.Columns("Column4")
            Me.columnColumn5 = MyBase.Columns("Column5")
            Me.columnColumn6 = MyBase.Columns("Column6")
            Me.columnColumn7 = MyBase.Columns("Column7")
            Me.columnColumn8 = MyBase.Columns("Column8")
            Me.columnColumn9 = MyBase.Columns("Column9")
            Me.columnColumn10 = MyBase.Columns("Column10")
            Me.columnColumn11 = MyBase.Columns("Column11")
            Me.columnColumn12 = MyBase.Columns("Column12")
            Me.columnColumn13 = MyBase.Columns("Column13")
            Me.columnColumn14 = MyBase.Columns("Column14")
            Me.columnColumn15 = MyBase.Columns("Column15")
            Me.columnColumn16 = MyBase.Columns("Column16")
            Me.columnColumn17 = MyBase.Columns("Column17")
            Me.columnColumn18 = MyBase.Columns("Column18")
            Me.columnColumn19 = MyBase.Columns("Column19")
            Me.columnColumn20 = MyBase.Columns("Column20")
            Me.columnColumn21 = MyBase.Columns("Column21")
            Me.columnColumn22 = MyBase.Columns("Column22")
            Me.columnColumn23 = MyBase.Columns("Column23")
            Me.columnColumn24 = MyBase.Columns("Column24")
            Me.columnColumn25 = MyBase.Columns("Column25")
            Me.columnColumn26 = MyBase.Columns("Column26")
            Me.columnColumn27 = MyBase.Columns("Column27")
            Me.columnColumn28 = MyBase.Columns("Column28")
            Me.columnColumn29 = MyBase.Columns("Column29")
            Me.columnColumn30 = MyBase.Columns("Column30")
            Me.columnColumn31 = MyBase.Columns("Column31")
            Me.columnColumn32 = MyBase.Columns("Column32")
            Me.columnColumn33 = MyBase.Columns("Column33")
            Me.columnColumn34 = MyBase.Columns("Column34")
            Me.columnColumn35 = MyBase.Columns("Column35")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnColumn1 = New Global.System.Data.DataColumn("Column1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn1)
            Me.columnColumn2 = New Global.System.Data.DataColumn("Column2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn2)
            Me.columnColumn3 = New Global.System.Data.DataColumn("Column3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn3)
            Me.columnColumn4 = New Global.System.Data.DataColumn("Column4", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn4)
            Me.columnColumn5 = New Global.System.Data.DataColumn("Column5", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn5)
            Me.columnColumn6 = New Global.System.Data.DataColumn("Column6", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn6)
            Me.columnColumn7 = New Global.System.Data.DataColumn("Column7", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn7)
            Me.columnColumn8 = New Global.System.Data.DataColumn("Column8", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn8)
            Me.columnColumn9 = New Global.System.Data.DataColumn("Column9", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn9)
            Me.columnColumn10 = New Global.System.Data.DataColumn("Column10", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn10)
            Me.columnColumn11 = New Global.System.Data.DataColumn("Column11", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn11)
            Me.columnColumn12 = New Global.System.Data.DataColumn("Column12", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn12)
            Me.columnColumn13 = New Global.System.Data.DataColumn("Column13", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn13)
            Me.columnColumn14 = New Global.System.Data.DataColumn("Column14", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn14)
            Me.columnColumn15 = New Global.System.Data.DataColumn("Column15", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn15)
            Me.columnColumn16 = New Global.System.Data.DataColumn("Column16", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn16)
            Me.columnColumn17 = New Global.System.Data.DataColumn("Column17", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn17)
            Me.columnColumn18 = New Global.System.Data.DataColumn("Column18", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn18)
            Me.columnColumn19 = New Global.System.Data.DataColumn("Column19", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn19)
            Me.columnColumn20 = New Global.System.Data.DataColumn("Column20", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn20)
            Me.columnColumn21 = New Global.System.Data.DataColumn("Column21", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn21)
            Me.columnColumn22 = New Global.System.Data.DataColumn("Column22", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn22)
            Me.columnColumn23 = New Global.System.Data.DataColumn("Column23", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn23)
            Me.columnColumn24 = New Global.System.Data.DataColumn("Column24", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn24)
            Me.columnColumn25 = New Global.System.Data.DataColumn("Column25", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn25)
            Me.columnColumn26 = New Global.System.Data.DataColumn("Column26", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn26)
            Me.columnColumn27 = New Global.System.Data.DataColumn("Column27", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn27)
            Me.columnColumn28 = New Global.System.Data.DataColumn("Column28", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn28)
            Me.columnColumn29 = New Global.System.Data.DataColumn("Column29", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn29)
            Me.columnColumn30 = New Global.System.Data.DataColumn("Column30", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn30)
            Me.columnColumn31 = New Global.System.Data.DataColumn("Column31", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn31)
            Me.columnColumn32 = New Global.System.Data.DataColumn("Column32", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn32)
            Me.columnColumn33 = New Global.System.Data.DataColumn("Column33", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn33)
            Me.columnColumn34 = New Global.System.Data.DataColumn("Column34", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn34)
            Me.columnColumn35 = New Global.System.Data.DataColumn("Column35", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn35)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewTable5Row() As Table5Row
            Return CType(Me.NewRow,Table5Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New Table5Row(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(Table5Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.Table5RowChangedEvent) Is Nothing) Then
                RaiseEvent Table5RowChanged(Me, New Table5RowChangeEvent(CType(e.Row,Table5Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.Table5RowChangingEvent) Is Nothing) Then
                RaiseEvent Table5RowChanging(Me, New Table5RowChangeEvent(CType(e.Row,Table5Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.Table5RowDeletedEvent) Is Nothing) Then
                RaiseEvent Table5RowDeleted(Me, New Table5RowChangeEvent(CType(e.Row,Table5Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.Table5RowDeletingEvent) Is Nothing) Then
                RaiseEvent Table5RowDeleting(Me, New Table5RowChangeEvent(CType(e.Row,Table5Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveTable5Row(ByVal row As Table5Row)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As ReportData = New ReportData
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "Table5DataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class Table6DataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnColumn1 As Global.System.Data.DataColumn
        
        Private columnColumn2 As Global.System.Data.DataColumn
        
        Private columnColumn3 As Global.System.Data.DataColumn
        
        Private columnColumn4 As Global.System.Data.DataColumn
        
        Private columnColumn5 As Global.System.Data.DataColumn
        
        Private columnColumn6 As Global.System.Data.DataColumn
        
        Private columnColumn7 As Global.System.Data.DataColumn
        
        Private columnColumn8 As Global.System.Data.DataColumn
        
        Private columnColumn9 As Global.System.Data.DataColumn
        
        Private columnColumn10 As Global.System.Data.DataColumn
        
        Private columnColumn11 As Global.System.Data.DataColumn
        
        Private columnColumn12 As Global.System.Data.DataColumn
        
        Private columnColumn13 As Global.System.Data.DataColumn
        
        Private columnColumn14 As Global.System.Data.DataColumn
        
        Private columnColumn15 As Global.System.Data.DataColumn
        
        Private columnColumn16 As Global.System.Data.DataColumn
        
        Private columnColumn17 As Global.System.Data.DataColumn
        
        Private columnColumn18 As Global.System.Data.DataColumn
        
        Private columnColumn19 As Global.System.Data.DataColumn
        
        Private columnColumn20 As Global.System.Data.DataColumn
        
        Private columnColumn21 As Global.System.Data.DataColumn
        
        Private columnColumn22 As Global.System.Data.DataColumn
        
        Private columnColumn23 As Global.System.Data.DataColumn
        
        Private columnColumn24 As Global.System.Data.DataColumn
        
        Private columnColumn25 As Global.System.Data.DataColumn
        
        Private columnColumn26 As Global.System.Data.DataColumn
        
        Private columnColumn27 As Global.System.Data.DataColumn
        
        Private columnColumn28 As Global.System.Data.DataColumn
        
        Private columnColumn29 As Global.System.Data.DataColumn
        
        Private columnColumn30 As Global.System.Data.DataColumn
        
        Private columnColumn31 As Global.System.Data.DataColumn
        
        Private columnColumn32 As Global.System.Data.DataColumn
        
        Private columnColumn33 As Global.System.Data.DataColumn
        
        Private columnColumn34 As Global.System.Data.DataColumn
        
        Private columnColumn35 As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Table6"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column5Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn5
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column6Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn6
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column7Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn7
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column8Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn8
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column9Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn9
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column10Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn10
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column11Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn11
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column12Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn12
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column13Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn13
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column14Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn14
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column15Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn15
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column16Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn16
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column17Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn17
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column18Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn18
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column19Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn19
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column20Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn20
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column21Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn21
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column22Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn22
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column23Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn23
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column24Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn24
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column25Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn25
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column26Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn26
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column27Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn27
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column28Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn28
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column29Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn29
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column30Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn30
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column31Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn31
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column32Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn32
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column33Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn33
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column34Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn34
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column35Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn35
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As Table6Row
            Get
                Return CType(Me.Rows(index),Table6Row)
            End Get
        End Property
        
        Public Event Table6RowChanging As Table6RowChangeEventHandler
        
        Public Event Table6RowChanged As Table6RowChangeEventHandler
        
        Public Event Table6RowDeleting As Table6RowChangeEventHandler
        
        Public Event Table6RowDeleted As Table6RowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddTable6Row(ByVal row As Table6Row)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddTable6Row( _
                    ByVal Column1 As String,  _
                    ByVal Column2 As String,  _
                    ByVal Column3 As String,  _
                    ByVal Column4 As String,  _
                    ByVal Column5 As String,  _
                    ByVal Column6 As String,  _
                    ByVal Column7 As String,  _
                    ByVal Column8 As String,  _
                    ByVal Column9 As String,  _
                    ByVal Column10 As String,  _
                    ByVal Column11 As String,  _
                    ByVal Column12 As String,  _
                    ByVal Column13 As String,  _
                    ByVal Column14 As String,  _
                    ByVal Column15 As String,  _
                    ByVal Column16 As String,  _
                    ByVal Column17 As String,  _
                    ByVal Column18 As String,  _
                    ByVal Column19 As String,  _
                    ByVal Column20 As String,  _
                    ByVal Column21 As String,  _
                    ByVal Column22 As String,  _
                    ByVal Column23 As String,  _
                    ByVal Column24 As String,  _
                    ByVal Column25 As String,  _
                    ByVal Column26 As String,  _
                    ByVal Column27 As String,  _
                    ByVal Column28 As String,  _
                    ByVal Column29 As String,  _
                    ByVal Column30 As String,  _
                    ByVal Column31 As String,  _
                    ByVal Column32 As String,  _
                    ByVal Column33 As String,  _
                    ByVal Column34 As String,  _
                    ByVal Column35 As String) As Table6Row
            Dim rowTable6Row As Table6Row = CType(Me.NewRow,Table6Row)
            Dim columnValuesArray() As Object = New Object() {Column1, Column2, Column3, Column4, Column5, Column6, Column7, Column8, Column9, Column10, Column11, Column12, Column13, Column14, Column15, Column16, Column17, Column18, Column19, Column20, Column21, Column22, Column23, Column24, Column25, Column26, Column27, Column28, Column29, Column30, Column31, Column32, Column33, Column34, Column35}
            rowTable6Row.ItemArray = columnValuesArray
            Me.Rows.Add(rowTable6Row)
            Return rowTable6Row
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As Table6DataTable = CType(MyBase.Clone,Table6DataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New Table6DataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnColumn1 = MyBase.Columns("Column1")
            Me.columnColumn2 = MyBase.Columns("Column2")
            Me.columnColumn3 = MyBase.Columns("Column3")
            Me.columnColumn4 = MyBase.Columns("Column4")
            Me.columnColumn5 = MyBase.Columns("Column5")
            Me.columnColumn6 = MyBase.Columns("Column6")
            Me.columnColumn7 = MyBase.Columns("Column7")
            Me.columnColumn8 = MyBase.Columns("Column8")
            Me.columnColumn9 = MyBase.Columns("Column9")
            Me.columnColumn10 = MyBase.Columns("Column10")
            Me.columnColumn11 = MyBase.Columns("Column11")
            Me.columnColumn12 = MyBase.Columns("Column12")
            Me.columnColumn13 = MyBase.Columns("Column13")
            Me.columnColumn14 = MyBase.Columns("Column14")
            Me.columnColumn15 = MyBase.Columns("Column15")
            Me.columnColumn16 = MyBase.Columns("Column16")
            Me.columnColumn17 = MyBase.Columns("Column17")
            Me.columnColumn18 = MyBase.Columns("Column18")
            Me.columnColumn19 = MyBase.Columns("Column19")
            Me.columnColumn20 = MyBase.Columns("Column20")
            Me.columnColumn21 = MyBase.Columns("Column21")
            Me.columnColumn22 = MyBase.Columns("Column22")
            Me.columnColumn23 = MyBase.Columns("Column23")
            Me.columnColumn24 = MyBase.Columns("Column24")
            Me.columnColumn25 = MyBase.Columns("Column25")
            Me.columnColumn26 = MyBase.Columns("Column26")
            Me.columnColumn27 = MyBase.Columns("Column27")
            Me.columnColumn28 = MyBase.Columns("Column28")
            Me.columnColumn29 = MyBase.Columns("Column29")
            Me.columnColumn30 = MyBase.Columns("Column30")
            Me.columnColumn31 = MyBase.Columns("Column31")
            Me.columnColumn32 = MyBase.Columns("Column32")
            Me.columnColumn33 = MyBase.Columns("Column33")
            Me.columnColumn34 = MyBase.Columns("Column34")
            Me.columnColumn35 = MyBase.Columns("Column35")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnColumn1 = New Global.System.Data.DataColumn("Column1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn1)
            Me.columnColumn2 = New Global.System.Data.DataColumn("Column2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn2)
            Me.columnColumn3 = New Global.System.Data.DataColumn("Column3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn3)
            Me.columnColumn4 = New Global.System.Data.DataColumn("Column4", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn4)
            Me.columnColumn5 = New Global.System.Data.DataColumn("Column5", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn5)
            Me.columnColumn6 = New Global.System.Data.DataColumn("Column6", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn6)
            Me.columnColumn7 = New Global.System.Data.DataColumn("Column7", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn7)
            Me.columnColumn8 = New Global.System.Data.DataColumn("Column8", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn8)
            Me.columnColumn9 = New Global.System.Data.DataColumn("Column9", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn9)
            Me.columnColumn10 = New Global.System.Data.DataColumn("Column10", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn10)
            Me.columnColumn11 = New Global.System.Data.DataColumn("Column11", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn11)
            Me.columnColumn12 = New Global.System.Data.DataColumn("Column12", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn12)
            Me.columnColumn13 = New Global.System.Data.DataColumn("Column13", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn13)
            Me.columnColumn14 = New Global.System.Data.DataColumn("Column14", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn14)
            Me.columnColumn15 = New Global.System.Data.DataColumn("Column15", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn15)
            Me.columnColumn16 = New Global.System.Data.DataColumn("Column16", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn16)
            Me.columnColumn17 = New Global.System.Data.DataColumn("Column17", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn17)
            Me.columnColumn18 = New Global.System.Data.DataColumn("Column18", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn18)
            Me.columnColumn19 = New Global.System.Data.DataColumn("Column19", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn19)
            Me.columnColumn20 = New Global.System.Data.DataColumn("Column20", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn20)
            Me.columnColumn21 = New Global.System.Data.DataColumn("Column21", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn21)
            Me.columnColumn22 = New Global.System.Data.DataColumn("Column22", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn22)
            Me.columnColumn23 = New Global.System.Data.DataColumn("Column23", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn23)
            Me.columnColumn24 = New Global.System.Data.DataColumn("Column24", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn24)
            Me.columnColumn25 = New Global.System.Data.DataColumn("Column25", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn25)
            Me.columnColumn26 = New Global.System.Data.DataColumn("Column26", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn26)
            Me.columnColumn27 = New Global.System.Data.DataColumn("Column27", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn27)
            Me.columnColumn28 = New Global.System.Data.DataColumn("Column28", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn28)
            Me.columnColumn29 = New Global.System.Data.DataColumn("Column29", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn29)
            Me.columnColumn30 = New Global.System.Data.DataColumn("Column30", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn30)
            Me.columnColumn31 = New Global.System.Data.DataColumn("Column31", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn31)
            Me.columnColumn32 = New Global.System.Data.DataColumn("Column32", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn32)
            Me.columnColumn33 = New Global.System.Data.DataColumn("Column33", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn33)
            Me.columnColumn34 = New Global.System.Data.DataColumn("Column34", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn34)
            Me.columnColumn35 = New Global.System.Data.DataColumn("Column35", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn35)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewTable6Row() As Table6Row
            Return CType(Me.NewRow,Table6Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New Table6Row(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(Table6Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.Table6RowChangedEvent) Is Nothing) Then
                RaiseEvent Table6RowChanged(Me, New Table6RowChangeEvent(CType(e.Row,Table6Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.Table6RowChangingEvent) Is Nothing) Then
                RaiseEvent Table6RowChanging(Me, New Table6RowChangeEvent(CType(e.Row,Table6Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.Table6RowDeletedEvent) Is Nothing) Then
                RaiseEvent Table6RowDeleted(Me, New Table6RowChangeEvent(CType(e.Row,Table6Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.Table6RowDeletingEvent) Is Nothing) Then
                RaiseEvent Table6RowDeleting(Me, New Table6RowChangeEvent(CType(e.Row,Table6Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveTable6Row(ByVal row As Table6Row)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As ReportData = New ReportData
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "Table6DataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class TableGeneralRow
        Inherits Global.System.Data.DataRow
        
        Private tableTableGeneral As TableGeneralDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableTableGeneral = CType(Me.Table,TableGeneralDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column1() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableGeneral.Column1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column1' in table 'TableGeneral' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableGeneral.Column1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column2() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableGeneral.Column2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column2' in table 'TableGeneral' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableGeneral.Column2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column3() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableGeneral.Column3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column3' in table 'TableGeneral' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableGeneral.Column3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column4() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableGeneral.Column4Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column4' in table 'TableGeneral' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableGeneral.Column4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column5() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableGeneral.Column5Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column5' in table 'TableGeneral' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableGeneral.Column5Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column6() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableGeneral.Column6Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column6' in table 'TableGeneral' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableGeneral.Column6Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column7() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableGeneral.Column7Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column7' in table 'TableGeneral' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableGeneral.Column7Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column8() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableGeneral.Column8Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column8' in table 'TableGeneral' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableGeneral.Column8Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column9() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableGeneral.Column9Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column9' in table 'TableGeneral' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableGeneral.Column9Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column10() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableGeneral.Column10Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column10' in table 'TableGeneral' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableGeneral.Column10Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column11() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableGeneral.Column11Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column11' in table 'TableGeneral' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableGeneral.Column11Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column12() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableGeneral.Column12Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column12' in table 'TableGeneral' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableGeneral.Column12Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column13() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableGeneral.Column13Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column13' in table 'TableGeneral' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableGeneral.Column13Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column14() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableGeneral.Column14Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column14' in table 'TableGeneral' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableGeneral.Column14Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column15() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableGeneral.Column15Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column15' in table 'TableGeneral' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableGeneral.Column15Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column16() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableGeneral.Column16Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column16' in table 'TableGeneral' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableGeneral.Column16Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column17() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableGeneral.Column17Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column17' in table 'TableGeneral' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableGeneral.Column17Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column18() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableGeneral.Column18Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column18' in table 'TableGeneral' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableGeneral.Column18Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column19() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableGeneral.Column19Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column19' in table 'TableGeneral' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableGeneral.Column19Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column20() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableGeneral.Column20Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column20' in table 'TableGeneral' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableGeneral.Column20Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column21() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableGeneral.Column21Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column21' in table 'TableGeneral' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableGeneral.Column21Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column22() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableGeneral.Column22Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column22' in table 'TableGeneral' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableGeneral.Column22Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column23() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableGeneral.Column23Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column23' in table 'TableGeneral' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableGeneral.Column23Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column24() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableGeneral.Column24Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column24' in table 'TableGeneral' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableGeneral.Column24Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column25() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableGeneral.Column25Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column25' in table 'TableGeneral' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableGeneral.Column25Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column26() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableGeneral.Column26Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column26' in table 'TableGeneral' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableGeneral.Column26Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column27() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableGeneral.Column27Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column27' in table 'TableGeneral' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableGeneral.Column27Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column28() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableGeneral.Column28Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column28' in table 'TableGeneral' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableGeneral.Column28Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column29() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableGeneral.Column29Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column29' in table 'TableGeneral' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableGeneral.Column29Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column30() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableGeneral.Column30Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column30' in table 'TableGeneral' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableGeneral.Column30Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column31() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableGeneral.Column31Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column31' in table 'TableGeneral' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableGeneral.Column31Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column32() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableGeneral.Column32Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column32' in table 'TableGeneral' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableGeneral.Column32Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column33() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableGeneral.Column33Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column33' in table 'TableGeneral' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableGeneral.Column33Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column34() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableGeneral.Column34Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column34' in table 'TableGeneral' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableGeneral.Column34Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column35() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableGeneral.Column35Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column35' in table 'TableGeneral' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableGeneral.Column35Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column36() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableGeneral.Column36Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column36' in table 'TableGeneral' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableGeneral.Column36Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column37() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableGeneral.Column37Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column37' in table 'TableGeneral' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableGeneral.Column37Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column38() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableGeneral.Column38Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column38' in table 'TableGeneral' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableGeneral.Column38Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column39() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableGeneral.Column39Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column39' in table 'TableGeneral' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableGeneral.Column39Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column40() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableGeneral.Column40Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column40' in table 'TableGeneral' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableGeneral.Column40Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column41() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableGeneral.Column41Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column41' in table 'TableGeneral' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableGeneral.Column41Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column42() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableGeneral.Column42Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column42' in table 'TableGeneral' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableGeneral.Column42Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column43() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableGeneral.Column43Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column43' in table 'TableGeneral' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableGeneral.Column43Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column44() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableGeneral.Column44Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column44' in table 'TableGeneral' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableGeneral.Column44Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column45() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableGeneral.Column45Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column45' in table 'TableGeneral' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableGeneral.Column45Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column46() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableGeneral.Column46Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column46' in table 'TableGeneral' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableGeneral.Column46Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column47() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableGeneral.Column47Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column47' in table 'TableGeneral' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableGeneral.Column47Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column48() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableGeneral.Column48Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column48' in table 'TableGeneral' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableGeneral.Column48Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column49() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableGeneral.Column49Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column49' in table 'TableGeneral' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableGeneral.Column49Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column50() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableGeneral.Column50Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column50' in table 'TableGeneral' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableGeneral.Column50Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property P_Column1() As Byte()
            Get
                Try 
                    Return CType(Me(Me.tableTableGeneral.P_Column1Column),Byte())
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'P_Column1' in table 'TableGeneral' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableGeneral.P_Column1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property P_Column2() As Byte()
            Get
                Try 
                    Return CType(Me(Me.tableTableGeneral.P_Column2Column),Byte())
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'P_Column2' in table 'TableGeneral' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableGeneral.P_Column2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property P_Column3() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableGeneral.P_Column3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'P_Column3' in table 'TableGeneral' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableGeneral.P_Column3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property P_Column4() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableGeneral.P_Column4Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'P_Column4' in table 'TableGeneral' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableGeneral.P_Column4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn1Null() As Boolean
            Return Me.IsNull(Me.tableTableGeneral.Column1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn1Null()
            Me(Me.tableTableGeneral.Column1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn2Null() As Boolean
            Return Me.IsNull(Me.tableTableGeneral.Column2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn2Null()
            Me(Me.tableTableGeneral.Column2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn3Null() As Boolean
            Return Me.IsNull(Me.tableTableGeneral.Column3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn3Null()
            Me(Me.tableTableGeneral.Column3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn4Null() As Boolean
            Return Me.IsNull(Me.tableTableGeneral.Column4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn4Null()
            Me(Me.tableTableGeneral.Column4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn5Null() As Boolean
            Return Me.IsNull(Me.tableTableGeneral.Column5Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn5Null()
            Me(Me.tableTableGeneral.Column5Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn6Null() As Boolean
            Return Me.IsNull(Me.tableTableGeneral.Column6Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn6Null()
            Me(Me.tableTableGeneral.Column6Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn7Null() As Boolean
            Return Me.IsNull(Me.tableTableGeneral.Column7Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn7Null()
            Me(Me.tableTableGeneral.Column7Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn8Null() As Boolean
            Return Me.IsNull(Me.tableTableGeneral.Column8Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn8Null()
            Me(Me.tableTableGeneral.Column8Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn9Null() As Boolean
            Return Me.IsNull(Me.tableTableGeneral.Column9Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn9Null()
            Me(Me.tableTableGeneral.Column9Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn10Null() As Boolean
            Return Me.IsNull(Me.tableTableGeneral.Column10Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn10Null()
            Me(Me.tableTableGeneral.Column10Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn11Null() As Boolean
            Return Me.IsNull(Me.tableTableGeneral.Column11Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn11Null()
            Me(Me.tableTableGeneral.Column11Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn12Null() As Boolean
            Return Me.IsNull(Me.tableTableGeneral.Column12Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn12Null()
            Me(Me.tableTableGeneral.Column12Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn13Null() As Boolean
            Return Me.IsNull(Me.tableTableGeneral.Column13Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn13Null()
            Me(Me.tableTableGeneral.Column13Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn14Null() As Boolean
            Return Me.IsNull(Me.tableTableGeneral.Column14Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn14Null()
            Me(Me.tableTableGeneral.Column14Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn15Null() As Boolean
            Return Me.IsNull(Me.tableTableGeneral.Column15Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn15Null()
            Me(Me.tableTableGeneral.Column15Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn16Null() As Boolean
            Return Me.IsNull(Me.tableTableGeneral.Column16Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn16Null()
            Me(Me.tableTableGeneral.Column16Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn17Null() As Boolean
            Return Me.IsNull(Me.tableTableGeneral.Column17Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn17Null()
            Me(Me.tableTableGeneral.Column17Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn18Null() As Boolean
            Return Me.IsNull(Me.tableTableGeneral.Column18Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn18Null()
            Me(Me.tableTableGeneral.Column18Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn19Null() As Boolean
            Return Me.IsNull(Me.tableTableGeneral.Column19Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn19Null()
            Me(Me.tableTableGeneral.Column19Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn20Null() As Boolean
            Return Me.IsNull(Me.tableTableGeneral.Column20Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn20Null()
            Me(Me.tableTableGeneral.Column20Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn21Null() As Boolean
            Return Me.IsNull(Me.tableTableGeneral.Column21Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn21Null()
            Me(Me.tableTableGeneral.Column21Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn22Null() As Boolean
            Return Me.IsNull(Me.tableTableGeneral.Column22Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn22Null()
            Me(Me.tableTableGeneral.Column22Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn23Null() As Boolean
            Return Me.IsNull(Me.tableTableGeneral.Column23Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn23Null()
            Me(Me.tableTableGeneral.Column23Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn24Null() As Boolean
            Return Me.IsNull(Me.tableTableGeneral.Column24Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn24Null()
            Me(Me.tableTableGeneral.Column24Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn25Null() As Boolean
            Return Me.IsNull(Me.tableTableGeneral.Column25Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn25Null()
            Me(Me.tableTableGeneral.Column25Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn26Null() As Boolean
            Return Me.IsNull(Me.tableTableGeneral.Column26Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn26Null()
            Me(Me.tableTableGeneral.Column26Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn27Null() As Boolean
            Return Me.IsNull(Me.tableTableGeneral.Column27Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn27Null()
            Me(Me.tableTableGeneral.Column27Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn28Null() As Boolean
            Return Me.IsNull(Me.tableTableGeneral.Column28Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn28Null()
            Me(Me.tableTableGeneral.Column28Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn29Null() As Boolean
            Return Me.IsNull(Me.tableTableGeneral.Column29Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn29Null()
            Me(Me.tableTableGeneral.Column29Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn30Null() As Boolean
            Return Me.IsNull(Me.tableTableGeneral.Column30Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn30Null()
            Me(Me.tableTableGeneral.Column30Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn31Null() As Boolean
            Return Me.IsNull(Me.tableTableGeneral.Column31Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn31Null()
            Me(Me.tableTableGeneral.Column31Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn32Null() As Boolean
            Return Me.IsNull(Me.tableTableGeneral.Column32Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn32Null()
            Me(Me.tableTableGeneral.Column32Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn33Null() As Boolean
            Return Me.IsNull(Me.tableTableGeneral.Column33Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn33Null()
            Me(Me.tableTableGeneral.Column33Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn34Null() As Boolean
            Return Me.IsNull(Me.tableTableGeneral.Column34Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn34Null()
            Me(Me.tableTableGeneral.Column34Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn35Null() As Boolean
            Return Me.IsNull(Me.tableTableGeneral.Column35Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn35Null()
            Me(Me.tableTableGeneral.Column35Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn36Null() As Boolean
            Return Me.IsNull(Me.tableTableGeneral.Column36Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn36Null()
            Me(Me.tableTableGeneral.Column36Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn37Null() As Boolean
            Return Me.IsNull(Me.tableTableGeneral.Column37Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn37Null()
            Me(Me.tableTableGeneral.Column37Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn38Null() As Boolean
            Return Me.IsNull(Me.tableTableGeneral.Column38Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn38Null()
            Me(Me.tableTableGeneral.Column38Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn39Null() As Boolean
            Return Me.IsNull(Me.tableTableGeneral.Column39Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn39Null()
            Me(Me.tableTableGeneral.Column39Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn40Null() As Boolean
            Return Me.IsNull(Me.tableTableGeneral.Column40Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn40Null()
            Me(Me.tableTableGeneral.Column40Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn41Null() As Boolean
            Return Me.IsNull(Me.tableTableGeneral.Column41Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn41Null()
            Me(Me.tableTableGeneral.Column41Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn42Null() As Boolean
            Return Me.IsNull(Me.tableTableGeneral.Column42Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn42Null()
            Me(Me.tableTableGeneral.Column42Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn43Null() As Boolean
            Return Me.IsNull(Me.tableTableGeneral.Column43Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn43Null()
            Me(Me.tableTableGeneral.Column43Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn44Null() As Boolean
            Return Me.IsNull(Me.tableTableGeneral.Column44Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn44Null()
            Me(Me.tableTableGeneral.Column44Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn45Null() As Boolean
            Return Me.IsNull(Me.tableTableGeneral.Column45Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn45Null()
            Me(Me.tableTableGeneral.Column45Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn46Null() As Boolean
            Return Me.IsNull(Me.tableTableGeneral.Column46Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn46Null()
            Me(Me.tableTableGeneral.Column46Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn47Null() As Boolean
            Return Me.IsNull(Me.tableTableGeneral.Column47Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn47Null()
            Me(Me.tableTableGeneral.Column47Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn48Null() As Boolean
            Return Me.IsNull(Me.tableTableGeneral.Column48Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn48Null()
            Me(Me.tableTableGeneral.Column48Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn49Null() As Boolean
            Return Me.IsNull(Me.tableTableGeneral.Column49Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn49Null()
            Me(Me.tableTableGeneral.Column49Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn50Null() As Boolean
            Return Me.IsNull(Me.tableTableGeneral.Column50Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn50Null()
            Me(Me.tableTableGeneral.Column50Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsP_Column1Null() As Boolean
            Return Me.IsNull(Me.tableTableGeneral.P_Column1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetP_Column1Null()
            Me(Me.tableTableGeneral.P_Column1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsP_Column2Null() As Boolean
            Return Me.IsNull(Me.tableTableGeneral.P_Column2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetP_Column2Null()
            Me(Me.tableTableGeneral.P_Column2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsP_Column3Null() As Boolean
            Return Me.IsNull(Me.tableTableGeneral.P_Column3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetP_Column3Null()
            Me(Me.tableTableGeneral.P_Column3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsP_Column4Null() As Boolean
            Return Me.IsNull(Me.tableTableGeneral.P_Column4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetP_Column4Null()
            Me(Me.tableTableGeneral.P_Column4Column) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class Table1Row
        Inherits Global.System.Data.DataRow
        
        Private tableTable1 As Table1DataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableTable1 = CType(Me.Table,Table1DataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column1() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable1.Column1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column1' in table 'Table1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable1.Column1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column2() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable1.Column2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column2' in table 'Table1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable1.Column2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column3() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable1.Column3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column3' in table 'Table1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable1.Column3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column4() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable1.Column4Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column4' in table 'Table1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable1.Column4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column5() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable1.Column5Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column5' in table 'Table1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable1.Column5Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column6() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable1.Column6Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column6' in table 'Table1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable1.Column6Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column7() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable1.Column7Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column7' in table 'Table1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable1.Column7Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column8() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable1.Column8Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column8' in table 'Table1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable1.Column8Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column9() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable1.Column9Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column9' in table 'Table1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable1.Column9Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column10() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable1.Column10Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column10' in table 'Table1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable1.Column10Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column11() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable1.Column11Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column11' in table 'Table1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable1.Column11Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column12() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable1.Column12Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column12' in table 'Table1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable1.Column12Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column13() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable1.Column13Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column13' in table 'Table1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable1.Column13Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column14() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable1.Column14Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column14' in table 'Table1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable1.Column14Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column15() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable1.Column15Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column15' in table 'Table1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable1.Column15Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column16() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable1.Column16Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column16' in table 'Table1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable1.Column16Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column17() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable1.Column17Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column17' in table 'Table1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable1.Column17Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column18() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable1.Column18Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column18' in table 'Table1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable1.Column18Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column19() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable1.Column19Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column19' in table 'Table1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable1.Column19Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column20() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable1.Column20Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column20' in table 'Table1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable1.Column20Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column21() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable1.Column21Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column21' in table 'Table1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable1.Column21Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column22() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable1.Column22Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column22' in table 'Table1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable1.Column22Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column23() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable1.Column23Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column23' in table 'Table1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable1.Column23Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column24() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable1.Column24Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column24' in table 'Table1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable1.Column24Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column25() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable1.Column25Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column25' in table 'Table1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable1.Column25Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column26() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable1.Column26Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column26' in table 'Table1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable1.Column26Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column27() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable1.Column27Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column27' in table 'Table1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable1.Column27Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column28() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable1.Column28Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column28' in table 'Table1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable1.Column28Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column29() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable1.Column29Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column29' in table 'Table1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable1.Column29Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column30() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable1.Column30Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column30' in table 'Table1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable1.Column30Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column31() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable1.Column31Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column31' in table 'Table1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable1.Column31Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column32() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable1.Column32Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column32' in table 'Table1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable1.Column32Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column33() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable1.Column33Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column33' in table 'Table1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable1.Column33Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column34() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable1.Column34Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column34' in table 'Table1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable1.Column34Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column35() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable1.Column35Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column35' in table 'Table1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable1.Column35Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column36() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable1.Column36Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column36' in table 'Table1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable1.Column36Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column37() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable1.Column37Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column37' in table 'Table1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable1.Column37Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column38() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable1.Column38Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column38' in table 'Table1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable1.Column38Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column39() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable1.Column39Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column39' in table 'Table1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable1.Column39Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column40() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable1.Column40Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column40' in table 'Table1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable1.Column40Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column41() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable1.Column41Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column41' in table 'Table1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable1.Column41Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column42() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable1.Column42Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column42' in table 'Table1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable1.Column42Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column43() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable1.Column43Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column43' in table 'Table1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable1.Column43Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column44() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable1.Column44Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column44' in table 'Table1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable1.Column44Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column45() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable1.Column45Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column45' in table 'Table1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable1.Column45Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column46() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable1.Column46Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column46' in table 'Table1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable1.Column46Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column47() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable1.Column47Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column47' in table 'Table1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable1.Column47Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column48() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable1.Column48Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column48' in table 'Table1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable1.Column48Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column49() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable1.Column49Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column49' in table 'Table1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable1.Column49Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column50() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable1.Column50Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column50' in table 'Table1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable1.Column50Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column51() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable1.Column51Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column51' in table 'Table1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable1.Column51Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column52() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable1.Column52Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column52' in table 'Table1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable1.Column52Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column53() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable1.Column53Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column53' in table 'Table1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable1.Column53Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column54() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable1.Column54Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column54' in table 'Table1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable1.Column54Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column55() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable1.Column55Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column55' in table 'Table1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable1.Column55Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column56() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable1.Column56Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column56' in table 'Table1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable1.Column56Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column57() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable1.Column57Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column57' in table 'Table1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable1.Column57Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column58() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable1.Column58Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column58' in table 'Table1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable1.Column58Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column59() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable1.Column59Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column59' in table 'Table1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable1.Column59Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column60() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable1.Column60Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column60' in table 'Table1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable1.Column60Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column61() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable1.Column61Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column61' in table 'Table1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable1.Column61Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column62() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable1.Column62Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column62' in table 'Table1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable1.Column62Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column63() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable1.Column63Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column63' in table 'Table1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable1.Column63Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column64() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable1.Column64Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column64' in table 'Table1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable1.Column64Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column65() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable1.Column65Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column65' in table 'Table1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable1.Column65Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column66() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable1.Column66Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column66' in table 'Table1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable1.Column66Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column67() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable1.Column67Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column67' in table 'Table1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable1.Column67Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column68() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable1.Column68Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column68' in table 'Table1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable1.Column68Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column69() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable1.Column69Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column69' in table 'Table1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable1.Column69Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column70() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable1.Column70Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column70' in table 'Table1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable1.Column70Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column71() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable1.Column71Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column71' in table 'Table1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable1.Column71Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column72() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable1.Column72Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column72' in table 'Table1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable1.Column72Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column73() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable1.Column73Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column73' in table 'Table1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable1.Column73Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column74() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable1.Column74Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column74' in table 'Table1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable1.Column74Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column75() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable1.Column75Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column75' in table 'Table1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable1.Column75Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column76() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable1.Column76Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column76' in table 'Table1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable1.Column76Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column77() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable1.Column77Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column77' in table 'Table1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable1.Column77Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column78() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable1.Column78Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column78' in table 'Table1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable1.Column78Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column79() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable1.Column79Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column79' in table 'Table1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable1.Column79Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column80() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable1.Column80Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column80' in table 'Table1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable1.Column80Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn1Null() As Boolean
            Return Me.IsNull(Me.tableTable1.Column1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn1Null()
            Me(Me.tableTable1.Column1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn2Null() As Boolean
            Return Me.IsNull(Me.tableTable1.Column2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn2Null()
            Me(Me.tableTable1.Column2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn3Null() As Boolean
            Return Me.IsNull(Me.tableTable1.Column3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn3Null()
            Me(Me.tableTable1.Column3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn4Null() As Boolean
            Return Me.IsNull(Me.tableTable1.Column4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn4Null()
            Me(Me.tableTable1.Column4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn5Null() As Boolean
            Return Me.IsNull(Me.tableTable1.Column5Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn5Null()
            Me(Me.tableTable1.Column5Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn6Null() As Boolean
            Return Me.IsNull(Me.tableTable1.Column6Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn6Null()
            Me(Me.tableTable1.Column6Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn7Null() As Boolean
            Return Me.IsNull(Me.tableTable1.Column7Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn7Null()
            Me(Me.tableTable1.Column7Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn8Null() As Boolean
            Return Me.IsNull(Me.tableTable1.Column8Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn8Null()
            Me(Me.tableTable1.Column8Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn9Null() As Boolean
            Return Me.IsNull(Me.tableTable1.Column9Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn9Null()
            Me(Me.tableTable1.Column9Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn10Null() As Boolean
            Return Me.IsNull(Me.tableTable1.Column10Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn10Null()
            Me(Me.tableTable1.Column10Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn11Null() As Boolean
            Return Me.IsNull(Me.tableTable1.Column11Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn11Null()
            Me(Me.tableTable1.Column11Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn12Null() As Boolean
            Return Me.IsNull(Me.tableTable1.Column12Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn12Null()
            Me(Me.tableTable1.Column12Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn13Null() As Boolean
            Return Me.IsNull(Me.tableTable1.Column13Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn13Null()
            Me(Me.tableTable1.Column13Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn14Null() As Boolean
            Return Me.IsNull(Me.tableTable1.Column14Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn14Null()
            Me(Me.tableTable1.Column14Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn15Null() As Boolean
            Return Me.IsNull(Me.tableTable1.Column15Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn15Null()
            Me(Me.tableTable1.Column15Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn16Null() As Boolean
            Return Me.IsNull(Me.tableTable1.Column16Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn16Null()
            Me(Me.tableTable1.Column16Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn17Null() As Boolean
            Return Me.IsNull(Me.tableTable1.Column17Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn17Null()
            Me(Me.tableTable1.Column17Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn18Null() As Boolean
            Return Me.IsNull(Me.tableTable1.Column18Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn18Null()
            Me(Me.tableTable1.Column18Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn19Null() As Boolean
            Return Me.IsNull(Me.tableTable1.Column19Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn19Null()
            Me(Me.tableTable1.Column19Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn20Null() As Boolean
            Return Me.IsNull(Me.tableTable1.Column20Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn20Null()
            Me(Me.tableTable1.Column20Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn21Null() As Boolean
            Return Me.IsNull(Me.tableTable1.Column21Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn21Null()
            Me(Me.tableTable1.Column21Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn22Null() As Boolean
            Return Me.IsNull(Me.tableTable1.Column22Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn22Null()
            Me(Me.tableTable1.Column22Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn23Null() As Boolean
            Return Me.IsNull(Me.tableTable1.Column23Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn23Null()
            Me(Me.tableTable1.Column23Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn24Null() As Boolean
            Return Me.IsNull(Me.tableTable1.Column24Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn24Null()
            Me(Me.tableTable1.Column24Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn25Null() As Boolean
            Return Me.IsNull(Me.tableTable1.Column25Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn25Null()
            Me(Me.tableTable1.Column25Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn26Null() As Boolean
            Return Me.IsNull(Me.tableTable1.Column26Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn26Null()
            Me(Me.tableTable1.Column26Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn27Null() As Boolean
            Return Me.IsNull(Me.tableTable1.Column27Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn27Null()
            Me(Me.tableTable1.Column27Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn28Null() As Boolean
            Return Me.IsNull(Me.tableTable1.Column28Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn28Null()
            Me(Me.tableTable1.Column28Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn29Null() As Boolean
            Return Me.IsNull(Me.tableTable1.Column29Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn29Null()
            Me(Me.tableTable1.Column29Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn30Null() As Boolean
            Return Me.IsNull(Me.tableTable1.Column30Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn30Null()
            Me(Me.tableTable1.Column30Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn31Null() As Boolean
            Return Me.IsNull(Me.tableTable1.Column31Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn31Null()
            Me(Me.tableTable1.Column31Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn32Null() As Boolean
            Return Me.IsNull(Me.tableTable1.Column32Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn32Null()
            Me(Me.tableTable1.Column32Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn33Null() As Boolean
            Return Me.IsNull(Me.tableTable1.Column33Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn33Null()
            Me(Me.tableTable1.Column33Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn34Null() As Boolean
            Return Me.IsNull(Me.tableTable1.Column34Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn34Null()
            Me(Me.tableTable1.Column34Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn35Null() As Boolean
            Return Me.IsNull(Me.tableTable1.Column35Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn35Null()
            Me(Me.tableTable1.Column35Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn36Null() As Boolean
            Return Me.IsNull(Me.tableTable1.Column36Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn36Null()
            Me(Me.tableTable1.Column36Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn37Null() As Boolean
            Return Me.IsNull(Me.tableTable1.Column37Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn37Null()
            Me(Me.tableTable1.Column37Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn38Null() As Boolean
            Return Me.IsNull(Me.tableTable1.Column38Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn38Null()
            Me(Me.tableTable1.Column38Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn39Null() As Boolean
            Return Me.IsNull(Me.tableTable1.Column39Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn39Null()
            Me(Me.tableTable1.Column39Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn40Null() As Boolean
            Return Me.IsNull(Me.tableTable1.Column40Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn40Null()
            Me(Me.tableTable1.Column40Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn41Null() As Boolean
            Return Me.IsNull(Me.tableTable1.Column41Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn41Null()
            Me(Me.tableTable1.Column41Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn42Null() As Boolean
            Return Me.IsNull(Me.tableTable1.Column42Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn42Null()
            Me(Me.tableTable1.Column42Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn43Null() As Boolean
            Return Me.IsNull(Me.tableTable1.Column43Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn43Null()
            Me(Me.tableTable1.Column43Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn44Null() As Boolean
            Return Me.IsNull(Me.tableTable1.Column44Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn44Null()
            Me(Me.tableTable1.Column44Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn45Null() As Boolean
            Return Me.IsNull(Me.tableTable1.Column45Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn45Null()
            Me(Me.tableTable1.Column45Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn46Null() As Boolean
            Return Me.IsNull(Me.tableTable1.Column46Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn46Null()
            Me(Me.tableTable1.Column46Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn47Null() As Boolean
            Return Me.IsNull(Me.tableTable1.Column47Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn47Null()
            Me(Me.tableTable1.Column47Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn48Null() As Boolean
            Return Me.IsNull(Me.tableTable1.Column48Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn48Null()
            Me(Me.tableTable1.Column48Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn49Null() As Boolean
            Return Me.IsNull(Me.tableTable1.Column49Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn49Null()
            Me(Me.tableTable1.Column49Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn50Null() As Boolean
            Return Me.IsNull(Me.tableTable1.Column50Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn50Null()
            Me(Me.tableTable1.Column50Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn51Null() As Boolean
            Return Me.IsNull(Me.tableTable1.Column51Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn51Null()
            Me(Me.tableTable1.Column51Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn52Null() As Boolean
            Return Me.IsNull(Me.tableTable1.Column52Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn52Null()
            Me(Me.tableTable1.Column52Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn53Null() As Boolean
            Return Me.IsNull(Me.tableTable1.Column53Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn53Null()
            Me(Me.tableTable1.Column53Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn54Null() As Boolean
            Return Me.IsNull(Me.tableTable1.Column54Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn54Null()
            Me(Me.tableTable1.Column54Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn55Null() As Boolean
            Return Me.IsNull(Me.tableTable1.Column55Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn55Null()
            Me(Me.tableTable1.Column55Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn56Null() As Boolean
            Return Me.IsNull(Me.tableTable1.Column56Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn56Null()
            Me(Me.tableTable1.Column56Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn57Null() As Boolean
            Return Me.IsNull(Me.tableTable1.Column57Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn57Null()
            Me(Me.tableTable1.Column57Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn58Null() As Boolean
            Return Me.IsNull(Me.tableTable1.Column58Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn58Null()
            Me(Me.tableTable1.Column58Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn59Null() As Boolean
            Return Me.IsNull(Me.tableTable1.Column59Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn59Null()
            Me(Me.tableTable1.Column59Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn60Null() As Boolean
            Return Me.IsNull(Me.tableTable1.Column60Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn60Null()
            Me(Me.tableTable1.Column60Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn61Null() As Boolean
            Return Me.IsNull(Me.tableTable1.Column61Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn61Null()
            Me(Me.tableTable1.Column61Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn62Null() As Boolean
            Return Me.IsNull(Me.tableTable1.Column62Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn62Null()
            Me(Me.tableTable1.Column62Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn63Null() As Boolean
            Return Me.IsNull(Me.tableTable1.Column63Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn63Null()
            Me(Me.tableTable1.Column63Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn64Null() As Boolean
            Return Me.IsNull(Me.tableTable1.Column64Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn64Null()
            Me(Me.tableTable1.Column64Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn65Null() As Boolean
            Return Me.IsNull(Me.tableTable1.Column65Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn65Null()
            Me(Me.tableTable1.Column65Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn66Null() As Boolean
            Return Me.IsNull(Me.tableTable1.Column66Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn66Null()
            Me(Me.tableTable1.Column66Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn67Null() As Boolean
            Return Me.IsNull(Me.tableTable1.Column67Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn67Null()
            Me(Me.tableTable1.Column67Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn68Null() As Boolean
            Return Me.IsNull(Me.tableTable1.Column68Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn68Null()
            Me(Me.tableTable1.Column68Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn69Null() As Boolean
            Return Me.IsNull(Me.tableTable1.Column69Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn69Null()
            Me(Me.tableTable1.Column69Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn70Null() As Boolean
            Return Me.IsNull(Me.tableTable1.Column70Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn70Null()
            Me(Me.tableTable1.Column70Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn71Null() As Boolean
            Return Me.IsNull(Me.tableTable1.Column71Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn71Null()
            Me(Me.tableTable1.Column71Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn72Null() As Boolean
            Return Me.IsNull(Me.tableTable1.Column72Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn72Null()
            Me(Me.tableTable1.Column72Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn73Null() As Boolean
            Return Me.IsNull(Me.tableTable1.Column73Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn73Null()
            Me(Me.tableTable1.Column73Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn74Null() As Boolean
            Return Me.IsNull(Me.tableTable1.Column74Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn74Null()
            Me(Me.tableTable1.Column74Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn75Null() As Boolean
            Return Me.IsNull(Me.tableTable1.Column75Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn75Null()
            Me(Me.tableTable1.Column75Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn76Null() As Boolean
            Return Me.IsNull(Me.tableTable1.Column76Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn76Null()
            Me(Me.tableTable1.Column76Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn77Null() As Boolean
            Return Me.IsNull(Me.tableTable1.Column77Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn77Null()
            Me(Me.tableTable1.Column77Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn78Null() As Boolean
            Return Me.IsNull(Me.tableTable1.Column78Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn78Null()
            Me(Me.tableTable1.Column78Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn79Null() As Boolean
            Return Me.IsNull(Me.tableTable1.Column79Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn79Null()
            Me(Me.tableTable1.Column79Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn80Null() As Boolean
            Return Me.IsNull(Me.tableTable1.Column80Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn80Null()
            Me(Me.tableTable1.Column80Column) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class Table2Row
        Inherits Global.System.Data.DataRow
        
        Private tableTable2 As Table2DataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableTable2 = CType(Me.Table,Table2DataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column1() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable2.Column1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column1' in table 'Table2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable2.Column1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column2() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable2.Column2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column2' in table 'Table2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable2.Column2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column3() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable2.Column3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column3' in table 'Table2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable2.Column3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column4() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable2.Column4Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column4' in table 'Table2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable2.Column4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column5() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable2.Column5Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column5' in table 'Table2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable2.Column5Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column6() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable2.Column6Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column6' in table 'Table2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable2.Column6Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column7() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable2.Column7Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column7' in table 'Table2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable2.Column7Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column8() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable2.Column8Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column8' in table 'Table2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable2.Column8Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column9() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable2.Column9Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column9' in table 'Table2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable2.Column9Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column10() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable2.Column10Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column10' in table 'Table2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable2.Column10Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column11() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable2.Column11Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column11' in table 'Table2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable2.Column11Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column12() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable2.Column12Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column12' in table 'Table2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable2.Column12Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column13() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable2.Column13Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column13' in table 'Table2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable2.Column13Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column14() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable2.Column14Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column14' in table 'Table2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable2.Column14Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column15() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable2.Column15Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column15' in table 'Table2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable2.Column15Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column16() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable2.Column16Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column16' in table 'Table2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable2.Column16Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column17() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable2.Column17Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column17' in table 'Table2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable2.Column17Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column18() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable2.Column18Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column18' in table 'Table2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable2.Column18Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column19() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable2.Column19Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column19' in table 'Table2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable2.Column19Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column20() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable2.Column20Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column20' in table 'Table2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable2.Column20Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column21() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable2.Column21Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column21' in table 'Table2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable2.Column21Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column22() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable2.Column22Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column22' in table 'Table2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable2.Column22Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column23() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable2.Column23Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column23' in table 'Table2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable2.Column23Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column24() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable2.Column24Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column24' in table 'Table2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable2.Column24Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column25() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable2.Column25Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column25' in table 'Table2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable2.Column25Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column26() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable2.Column26Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column26' in table 'Table2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable2.Column26Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column27() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable2.Column27Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column27' in table 'Table2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable2.Column27Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column28() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable2.Column28Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column28' in table 'Table2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable2.Column28Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column29() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable2.Column29Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column29' in table 'Table2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable2.Column29Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column30() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable2.Column30Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column30' in table 'Table2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable2.Column30Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column31() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable2.Column31Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column31' in table 'Table2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable2.Column31Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column32() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable2.Column32Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column32' in table 'Table2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable2.Column32Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column33() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable2.Column33Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column33' in table 'Table2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable2.Column33Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column34() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable2.Column34Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column34' in table 'Table2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable2.Column34Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column35() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable2.Column35Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column35' in table 'Table2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable2.Column35Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn1Null() As Boolean
            Return Me.IsNull(Me.tableTable2.Column1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn1Null()
            Me(Me.tableTable2.Column1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn2Null() As Boolean
            Return Me.IsNull(Me.tableTable2.Column2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn2Null()
            Me(Me.tableTable2.Column2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn3Null() As Boolean
            Return Me.IsNull(Me.tableTable2.Column3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn3Null()
            Me(Me.tableTable2.Column3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn4Null() As Boolean
            Return Me.IsNull(Me.tableTable2.Column4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn4Null()
            Me(Me.tableTable2.Column4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn5Null() As Boolean
            Return Me.IsNull(Me.tableTable2.Column5Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn5Null()
            Me(Me.tableTable2.Column5Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn6Null() As Boolean
            Return Me.IsNull(Me.tableTable2.Column6Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn6Null()
            Me(Me.tableTable2.Column6Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn7Null() As Boolean
            Return Me.IsNull(Me.tableTable2.Column7Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn7Null()
            Me(Me.tableTable2.Column7Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn8Null() As Boolean
            Return Me.IsNull(Me.tableTable2.Column8Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn8Null()
            Me(Me.tableTable2.Column8Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn9Null() As Boolean
            Return Me.IsNull(Me.tableTable2.Column9Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn9Null()
            Me(Me.tableTable2.Column9Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn10Null() As Boolean
            Return Me.IsNull(Me.tableTable2.Column10Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn10Null()
            Me(Me.tableTable2.Column10Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn11Null() As Boolean
            Return Me.IsNull(Me.tableTable2.Column11Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn11Null()
            Me(Me.tableTable2.Column11Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn12Null() As Boolean
            Return Me.IsNull(Me.tableTable2.Column12Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn12Null()
            Me(Me.tableTable2.Column12Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn13Null() As Boolean
            Return Me.IsNull(Me.tableTable2.Column13Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn13Null()
            Me(Me.tableTable2.Column13Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn14Null() As Boolean
            Return Me.IsNull(Me.tableTable2.Column14Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn14Null()
            Me(Me.tableTable2.Column14Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn15Null() As Boolean
            Return Me.IsNull(Me.tableTable2.Column15Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn15Null()
            Me(Me.tableTable2.Column15Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn16Null() As Boolean
            Return Me.IsNull(Me.tableTable2.Column16Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn16Null()
            Me(Me.tableTable2.Column16Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn17Null() As Boolean
            Return Me.IsNull(Me.tableTable2.Column17Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn17Null()
            Me(Me.tableTable2.Column17Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn18Null() As Boolean
            Return Me.IsNull(Me.tableTable2.Column18Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn18Null()
            Me(Me.tableTable2.Column18Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn19Null() As Boolean
            Return Me.IsNull(Me.tableTable2.Column19Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn19Null()
            Me(Me.tableTable2.Column19Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn20Null() As Boolean
            Return Me.IsNull(Me.tableTable2.Column20Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn20Null()
            Me(Me.tableTable2.Column20Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn21Null() As Boolean
            Return Me.IsNull(Me.tableTable2.Column21Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn21Null()
            Me(Me.tableTable2.Column21Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn22Null() As Boolean
            Return Me.IsNull(Me.tableTable2.Column22Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn22Null()
            Me(Me.tableTable2.Column22Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn23Null() As Boolean
            Return Me.IsNull(Me.tableTable2.Column23Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn23Null()
            Me(Me.tableTable2.Column23Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn24Null() As Boolean
            Return Me.IsNull(Me.tableTable2.Column24Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn24Null()
            Me(Me.tableTable2.Column24Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn25Null() As Boolean
            Return Me.IsNull(Me.tableTable2.Column25Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn25Null()
            Me(Me.tableTable2.Column25Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn26Null() As Boolean
            Return Me.IsNull(Me.tableTable2.Column26Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn26Null()
            Me(Me.tableTable2.Column26Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn27Null() As Boolean
            Return Me.IsNull(Me.tableTable2.Column27Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn27Null()
            Me(Me.tableTable2.Column27Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn28Null() As Boolean
            Return Me.IsNull(Me.tableTable2.Column28Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn28Null()
            Me(Me.tableTable2.Column28Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn29Null() As Boolean
            Return Me.IsNull(Me.tableTable2.Column29Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn29Null()
            Me(Me.tableTable2.Column29Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn30Null() As Boolean
            Return Me.IsNull(Me.tableTable2.Column30Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn30Null()
            Me(Me.tableTable2.Column30Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn31Null() As Boolean
            Return Me.IsNull(Me.tableTable2.Column31Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn31Null()
            Me(Me.tableTable2.Column31Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn32Null() As Boolean
            Return Me.IsNull(Me.tableTable2.Column32Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn32Null()
            Me(Me.tableTable2.Column32Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn33Null() As Boolean
            Return Me.IsNull(Me.tableTable2.Column33Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn33Null()
            Me(Me.tableTable2.Column33Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn34Null() As Boolean
            Return Me.IsNull(Me.tableTable2.Column34Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn34Null()
            Me(Me.tableTable2.Column34Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn35Null() As Boolean
            Return Me.IsNull(Me.tableTable2.Column35Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn35Null()
            Me(Me.tableTable2.Column35Column) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class Table3Row
        Inherits Global.System.Data.DataRow
        
        Private tableTable3 As Table3DataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableTable3 = CType(Me.Table,Table3DataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column1() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable3.Column1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column1' in table 'Table3' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable3.Column1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column2() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable3.Column2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column2' in table 'Table3' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable3.Column2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column3() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable3.Column3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column3' in table 'Table3' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable3.Column3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column4() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable3.Column4Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column4' in table 'Table3' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable3.Column4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column5() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable3.Column5Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column5' in table 'Table3' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable3.Column5Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column6() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable3.Column6Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column6' in table 'Table3' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable3.Column6Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column7() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable3.Column7Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column7' in table 'Table3' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable3.Column7Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column8() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable3.Column8Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column8' in table 'Table3' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable3.Column8Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column9() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable3.Column9Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column9' in table 'Table3' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable3.Column9Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column10() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable3.Column10Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column10' in table 'Table3' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable3.Column10Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column11() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable3.Column11Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column11' in table 'Table3' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable3.Column11Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column12() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable3.Column12Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column12' in table 'Table3' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable3.Column12Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column13() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable3.Column13Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column13' in table 'Table3' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable3.Column13Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column14() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable3.Column14Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column14' in table 'Table3' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable3.Column14Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column15() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable3.Column15Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column15' in table 'Table3' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable3.Column15Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column16() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable3.Column16Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column16' in table 'Table3' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable3.Column16Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column17() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable3.Column17Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column17' in table 'Table3' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable3.Column17Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column18() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable3.Column18Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column18' in table 'Table3' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable3.Column18Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column19() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable3.Column19Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column19' in table 'Table3' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable3.Column19Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column20() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable3.Column20Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column20' in table 'Table3' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable3.Column20Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column21() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable3.Column21Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column21' in table 'Table3' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable3.Column21Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column22() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable3.Column22Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column22' in table 'Table3' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable3.Column22Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column23() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable3.Column23Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column23' in table 'Table3' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable3.Column23Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column24() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable3.Column24Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column24' in table 'Table3' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable3.Column24Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column25() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable3.Column25Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column25' in table 'Table3' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable3.Column25Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column26() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable3.Column26Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column26' in table 'Table3' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable3.Column26Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column27() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable3.Column27Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column27' in table 'Table3' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable3.Column27Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column28() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable3.Column28Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column28' in table 'Table3' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable3.Column28Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column29() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable3.Column29Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column29' in table 'Table3' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable3.Column29Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column30() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable3.Column30Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column30' in table 'Table3' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable3.Column30Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column31() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable3.Column31Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column31' in table 'Table3' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable3.Column31Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column32() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable3.Column32Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column32' in table 'Table3' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable3.Column32Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column33() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable3.Column33Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column33' in table 'Table3' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable3.Column33Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column34() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable3.Column34Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column34' in table 'Table3' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable3.Column34Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column35() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable3.Column35Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column35' in table 'Table3' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable3.Column35Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn1Null() As Boolean
            Return Me.IsNull(Me.tableTable3.Column1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn1Null()
            Me(Me.tableTable3.Column1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn2Null() As Boolean
            Return Me.IsNull(Me.tableTable3.Column2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn2Null()
            Me(Me.tableTable3.Column2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn3Null() As Boolean
            Return Me.IsNull(Me.tableTable3.Column3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn3Null()
            Me(Me.tableTable3.Column3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn4Null() As Boolean
            Return Me.IsNull(Me.tableTable3.Column4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn4Null()
            Me(Me.tableTable3.Column4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn5Null() As Boolean
            Return Me.IsNull(Me.tableTable3.Column5Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn5Null()
            Me(Me.tableTable3.Column5Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn6Null() As Boolean
            Return Me.IsNull(Me.tableTable3.Column6Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn6Null()
            Me(Me.tableTable3.Column6Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn7Null() As Boolean
            Return Me.IsNull(Me.tableTable3.Column7Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn7Null()
            Me(Me.tableTable3.Column7Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn8Null() As Boolean
            Return Me.IsNull(Me.tableTable3.Column8Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn8Null()
            Me(Me.tableTable3.Column8Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn9Null() As Boolean
            Return Me.IsNull(Me.tableTable3.Column9Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn9Null()
            Me(Me.tableTable3.Column9Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn10Null() As Boolean
            Return Me.IsNull(Me.tableTable3.Column10Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn10Null()
            Me(Me.tableTable3.Column10Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn11Null() As Boolean
            Return Me.IsNull(Me.tableTable3.Column11Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn11Null()
            Me(Me.tableTable3.Column11Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn12Null() As Boolean
            Return Me.IsNull(Me.tableTable3.Column12Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn12Null()
            Me(Me.tableTable3.Column12Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn13Null() As Boolean
            Return Me.IsNull(Me.tableTable3.Column13Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn13Null()
            Me(Me.tableTable3.Column13Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn14Null() As Boolean
            Return Me.IsNull(Me.tableTable3.Column14Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn14Null()
            Me(Me.tableTable3.Column14Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn15Null() As Boolean
            Return Me.IsNull(Me.tableTable3.Column15Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn15Null()
            Me(Me.tableTable3.Column15Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn16Null() As Boolean
            Return Me.IsNull(Me.tableTable3.Column16Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn16Null()
            Me(Me.tableTable3.Column16Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn17Null() As Boolean
            Return Me.IsNull(Me.tableTable3.Column17Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn17Null()
            Me(Me.tableTable3.Column17Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn18Null() As Boolean
            Return Me.IsNull(Me.tableTable3.Column18Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn18Null()
            Me(Me.tableTable3.Column18Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn19Null() As Boolean
            Return Me.IsNull(Me.tableTable3.Column19Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn19Null()
            Me(Me.tableTable3.Column19Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn20Null() As Boolean
            Return Me.IsNull(Me.tableTable3.Column20Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn20Null()
            Me(Me.tableTable3.Column20Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn21Null() As Boolean
            Return Me.IsNull(Me.tableTable3.Column21Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn21Null()
            Me(Me.tableTable3.Column21Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn22Null() As Boolean
            Return Me.IsNull(Me.tableTable3.Column22Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn22Null()
            Me(Me.tableTable3.Column22Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn23Null() As Boolean
            Return Me.IsNull(Me.tableTable3.Column23Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn23Null()
            Me(Me.tableTable3.Column23Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn24Null() As Boolean
            Return Me.IsNull(Me.tableTable3.Column24Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn24Null()
            Me(Me.tableTable3.Column24Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn25Null() As Boolean
            Return Me.IsNull(Me.tableTable3.Column25Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn25Null()
            Me(Me.tableTable3.Column25Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn26Null() As Boolean
            Return Me.IsNull(Me.tableTable3.Column26Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn26Null()
            Me(Me.tableTable3.Column26Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn27Null() As Boolean
            Return Me.IsNull(Me.tableTable3.Column27Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn27Null()
            Me(Me.tableTable3.Column27Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn28Null() As Boolean
            Return Me.IsNull(Me.tableTable3.Column28Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn28Null()
            Me(Me.tableTable3.Column28Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn29Null() As Boolean
            Return Me.IsNull(Me.tableTable3.Column29Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn29Null()
            Me(Me.tableTable3.Column29Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn30Null() As Boolean
            Return Me.IsNull(Me.tableTable3.Column30Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn30Null()
            Me(Me.tableTable3.Column30Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn31Null() As Boolean
            Return Me.IsNull(Me.tableTable3.Column31Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn31Null()
            Me(Me.tableTable3.Column31Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn32Null() As Boolean
            Return Me.IsNull(Me.tableTable3.Column32Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn32Null()
            Me(Me.tableTable3.Column32Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn33Null() As Boolean
            Return Me.IsNull(Me.tableTable3.Column33Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn33Null()
            Me(Me.tableTable3.Column33Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn34Null() As Boolean
            Return Me.IsNull(Me.tableTable3.Column34Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn34Null()
            Me(Me.tableTable3.Column34Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn35Null() As Boolean
            Return Me.IsNull(Me.tableTable3.Column35Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn35Null()
            Me(Me.tableTable3.Column35Column) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class Table4Row
        Inherits Global.System.Data.DataRow
        
        Private tableTable4 As Table4DataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableTable4 = CType(Me.Table,Table4DataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column1() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable4.Column1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column1' in table 'Table4' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable4.Column1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column2() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable4.Column2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column2' in table 'Table4' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable4.Column2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column3() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable4.Column3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column3' in table 'Table4' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable4.Column3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column4() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable4.Column4Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column4' in table 'Table4' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable4.Column4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column5() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable4.Column5Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column5' in table 'Table4' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable4.Column5Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column6() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable4.Column6Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column6' in table 'Table4' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable4.Column6Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column7() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable4.Column7Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column7' in table 'Table4' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable4.Column7Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column8() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable4.Column8Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column8' in table 'Table4' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable4.Column8Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column9() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable4.Column9Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column9' in table 'Table4' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable4.Column9Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column10() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable4.Column10Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column10' in table 'Table4' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable4.Column10Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column11() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable4.Column11Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column11' in table 'Table4' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable4.Column11Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column12() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable4.Column12Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column12' in table 'Table4' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable4.Column12Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column13() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable4.Column13Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column13' in table 'Table4' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable4.Column13Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column14() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable4.Column14Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column14' in table 'Table4' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable4.Column14Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column15() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable4.Column15Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column15' in table 'Table4' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable4.Column15Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column16() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable4.Column16Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column16' in table 'Table4' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable4.Column16Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column17() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable4.Column17Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column17' in table 'Table4' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable4.Column17Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column18() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable4.Column18Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column18' in table 'Table4' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable4.Column18Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column19() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable4.Column19Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column19' in table 'Table4' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable4.Column19Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column20() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable4.Column20Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column20' in table 'Table4' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable4.Column20Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column21() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable4.Column21Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column21' in table 'Table4' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable4.Column21Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column22() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable4.Column22Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column22' in table 'Table4' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable4.Column22Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column23() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable4.Column23Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column23' in table 'Table4' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable4.Column23Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column24() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable4.Column24Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column24' in table 'Table4' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable4.Column24Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column25() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable4.Column25Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column25' in table 'Table4' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable4.Column25Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column26() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable4.Column26Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column26' in table 'Table4' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable4.Column26Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column27() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable4.Column27Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column27' in table 'Table4' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable4.Column27Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column28() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable4.Column28Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column28' in table 'Table4' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable4.Column28Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column29() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable4.Column29Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column29' in table 'Table4' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable4.Column29Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column30() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable4.Column30Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column30' in table 'Table4' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable4.Column30Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column31() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable4.Column31Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column31' in table 'Table4' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable4.Column31Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column32() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable4.Column32Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column32' in table 'Table4' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable4.Column32Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column33() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable4.Column33Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column33' in table 'Table4' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable4.Column33Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column34() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable4.Column34Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column34' in table 'Table4' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable4.Column34Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column35() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable4.Column35Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column35' in table 'Table4' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable4.Column35Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn1Null() As Boolean
            Return Me.IsNull(Me.tableTable4.Column1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn1Null()
            Me(Me.tableTable4.Column1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn2Null() As Boolean
            Return Me.IsNull(Me.tableTable4.Column2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn2Null()
            Me(Me.tableTable4.Column2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn3Null() As Boolean
            Return Me.IsNull(Me.tableTable4.Column3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn3Null()
            Me(Me.tableTable4.Column3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn4Null() As Boolean
            Return Me.IsNull(Me.tableTable4.Column4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn4Null()
            Me(Me.tableTable4.Column4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn5Null() As Boolean
            Return Me.IsNull(Me.tableTable4.Column5Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn5Null()
            Me(Me.tableTable4.Column5Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn6Null() As Boolean
            Return Me.IsNull(Me.tableTable4.Column6Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn6Null()
            Me(Me.tableTable4.Column6Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn7Null() As Boolean
            Return Me.IsNull(Me.tableTable4.Column7Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn7Null()
            Me(Me.tableTable4.Column7Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn8Null() As Boolean
            Return Me.IsNull(Me.tableTable4.Column8Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn8Null()
            Me(Me.tableTable4.Column8Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn9Null() As Boolean
            Return Me.IsNull(Me.tableTable4.Column9Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn9Null()
            Me(Me.tableTable4.Column9Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn10Null() As Boolean
            Return Me.IsNull(Me.tableTable4.Column10Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn10Null()
            Me(Me.tableTable4.Column10Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn11Null() As Boolean
            Return Me.IsNull(Me.tableTable4.Column11Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn11Null()
            Me(Me.tableTable4.Column11Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn12Null() As Boolean
            Return Me.IsNull(Me.tableTable4.Column12Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn12Null()
            Me(Me.tableTable4.Column12Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn13Null() As Boolean
            Return Me.IsNull(Me.tableTable4.Column13Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn13Null()
            Me(Me.tableTable4.Column13Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn14Null() As Boolean
            Return Me.IsNull(Me.tableTable4.Column14Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn14Null()
            Me(Me.tableTable4.Column14Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn15Null() As Boolean
            Return Me.IsNull(Me.tableTable4.Column15Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn15Null()
            Me(Me.tableTable4.Column15Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn16Null() As Boolean
            Return Me.IsNull(Me.tableTable4.Column16Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn16Null()
            Me(Me.tableTable4.Column16Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn17Null() As Boolean
            Return Me.IsNull(Me.tableTable4.Column17Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn17Null()
            Me(Me.tableTable4.Column17Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn18Null() As Boolean
            Return Me.IsNull(Me.tableTable4.Column18Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn18Null()
            Me(Me.tableTable4.Column18Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn19Null() As Boolean
            Return Me.IsNull(Me.tableTable4.Column19Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn19Null()
            Me(Me.tableTable4.Column19Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn20Null() As Boolean
            Return Me.IsNull(Me.tableTable4.Column20Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn20Null()
            Me(Me.tableTable4.Column20Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn21Null() As Boolean
            Return Me.IsNull(Me.tableTable4.Column21Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn21Null()
            Me(Me.tableTable4.Column21Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn22Null() As Boolean
            Return Me.IsNull(Me.tableTable4.Column22Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn22Null()
            Me(Me.tableTable4.Column22Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn23Null() As Boolean
            Return Me.IsNull(Me.tableTable4.Column23Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn23Null()
            Me(Me.tableTable4.Column23Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn24Null() As Boolean
            Return Me.IsNull(Me.tableTable4.Column24Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn24Null()
            Me(Me.tableTable4.Column24Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn25Null() As Boolean
            Return Me.IsNull(Me.tableTable4.Column25Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn25Null()
            Me(Me.tableTable4.Column25Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn26Null() As Boolean
            Return Me.IsNull(Me.tableTable4.Column26Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn26Null()
            Me(Me.tableTable4.Column26Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn27Null() As Boolean
            Return Me.IsNull(Me.tableTable4.Column27Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn27Null()
            Me(Me.tableTable4.Column27Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn28Null() As Boolean
            Return Me.IsNull(Me.tableTable4.Column28Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn28Null()
            Me(Me.tableTable4.Column28Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn29Null() As Boolean
            Return Me.IsNull(Me.tableTable4.Column29Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn29Null()
            Me(Me.tableTable4.Column29Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn30Null() As Boolean
            Return Me.IsNull(Me.tableTable4.Column30Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn30Null()
            Me(Me.tableTable4.Column30Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn31Null() As Boolean
            Return Me.IsNull(Me.tableTable4.Column31Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn31Null()
            Me(Me.tableTable4.Column31Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn32Null() As Boolean
            Return Me.IsNull(Me.tableTable4.Column32Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn32Null()
            Me(Me.tableTable4.Column32Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn33Null() As Boolean
            Return Me.IsNull(Me.tableTable4.Column33Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn33Null()
            Me(Me.tableTable4.Column33Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn34Null() As Boolean
            Return Me.IsNull(Me.tableTable4.Column34Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn34Null()
            Me(Me.tableTable4.Column34Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn35Null() As Boolean
            Return Me.IsNull(Me.tableTable4.Column35Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn35Null()
            Me(Me.tableTable4.Column35Column) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class TableCompanyRow
        Inherits Global.System.Data.DataRow
        
        Private tableTableCompany As TableCompanyDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableTableCompany = CType(Me.Table,TableCompanyDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column1() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableCompany.Column1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column1' in table 'TableCompany' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableCompany.Column1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column2() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableCompany.Column2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column2' in table 'TableCompany' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableCompany.Column2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column3() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableCompany.Column3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column3' in table 'TableCompany' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableCompany.Column3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column4() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableCompany.Column4Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column4' in table 'TableCompany' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableCompany.Column4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column5() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableCompany.Column5Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column5' in table 'TableCompany' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableCompany.Column5Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column6() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableCompany.Column6Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column6' in table 'TableCompany' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableCompany.Column6Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column7() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableCompany.Column7Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column7' in table 'TableCompany' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableCompany.Column7Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column8() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableCompany.Column8Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column8' in table 'TableCompany' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableCompany.Column8Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column9() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableCompany.Column9Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column9' in table 'TableCompany' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableCompany.Column9Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column10() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableCompany.Column10Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column10' in table 'TableCompany' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableCompany.Column10Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column11() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableCompany.Column11Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column11' in table 'TableCompany' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableCompany.Column11Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column12() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableCompany.Column12Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column12' in table 'TableCompany' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableCompany.Column12Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column13() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableCompany.Column13Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column13' in table 'TableCompany' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableCompany.Column13Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column14() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableCompany.Column14Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column14' in table 'TableCompany' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableCompany.Column14Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column15() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableCompany.Column15Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column15' in table 'TableCompany' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableCompany.Column15Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column16() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableCompany.Column16Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column16' in table 'TableCompany' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableCompany.Column16Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column17() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableCompany.Column17Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column17' in table 'TableCompany' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableCompany.Column17Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column18() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableCompany.Column18Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column18' in table 'TableCompany' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableCompany.Column18Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column19() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableCompany.Column19Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column19' in table 'TableCompany' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableCompany.Column19Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column20() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableCompany.Column20Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column20' in table 'TableCompany' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableCompany.Column20Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column21() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableCompany.Column21Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column21' in table 'TableCompany' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableCompany.Column21Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column22() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableCompany.Column22Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column22' in table 'TableCompany' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableCompany.Column22Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column23() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableCompany.Column23Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column23' in table 'TableCompany' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableCompany.Column23Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column24() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableCompany.Column24Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column24' in table 'TableCompany' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableCompany.Column24Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column25() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableCompany.Column25Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column25' in table 'TableCompany' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableCompany.Column25Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column26() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableCompany.Column26Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column26' in table 'TableCompany' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableCompany.Column26Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column27() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableCompany.Column27Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column27' in table 'TableCompany' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableCompany.Column27Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column28() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableCompany.Column28Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column28' in table 'TableCompany' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableCompany.Column28Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column29() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableCompany.Column29Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column29' in table 'TableCompany' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableCompany.Column29Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column30() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableCompany.Column30Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column30' in table 'TableCompany' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableCompany.Column30Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column31() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableCompany.Column31Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column31' in table 'TableCompany' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableCompany.Column31Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column32() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableCompany.Column32Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column32' in table 'TableCompany' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableCompany.Column32Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column33() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableCompany.Column33Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column33' in table 'TableCompany' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableCompany.Column33Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column34() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableCompany.Column34Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column34' in table 'TableCompany' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableCompany.Column34Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column35() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableCompany.Column35Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column35' in table 'TableCompany' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableCompany.Column35Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column36() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableCompany.Column36Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column36' in table 'TableCompany' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableCompany.Column36Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column37() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableCompany.Column37Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column37' in table 'TableCompany' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableCompany.Column37Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column38() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableCompany.Column38Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column38' in table 'TableCompany' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableCompany.Column38Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column39() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableCompany.Column39Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column39' in table 'TableCompany' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableCompany.Column39Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column40() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableCompany.Column40Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column40' in table 'TableCompany' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableCompany.Column40Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn1Null() As Boolean
            Return Me.IsNull(Me.tableTableCompany.Column1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn1Null()
            Me(Me.tableTableCompany.Column1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn2Null() As Boolean
            Return Me.IsNull(Me.tableTableCompany.Column2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn2Null()
            Me(Me.tableTableCompany.Column2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn3Null() As Boolean
            Return Me.IsNull(Me.tableTableCompany.Column3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn3Null()
            Me(Me.tableTableCompany.Column3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn4Null() As Boolean
            Return Me.IsNull(Me.tableTableCompany.Column4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn4Null()
            Me(Me.tableTableCompany.Column4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn5Null() As Boolean
            Return Me.IsNull(Me.tableTableCompany.Column5Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn5Null()
            Me(Me.tableTableCompany.Column5Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn6Null() As Boolean
            Return Me.IsNull(Me.tableTableCompany.Column6Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn6Null()
            Me(Me.tableTableCompany.Column6Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn7Null() As Boolean
            Return Me.IsNull(Me.tableTableCompany.Column7Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn7Null()
            Me(Me.tableTableCompany.Column7Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn8Null() As Boolean
            Return Me.IsNull(Me.tableTableCompany.Column8Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn8Null()
            Me(Me.tableTableCompany.Column8Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn9Null() As Boolean
            Return Me.IsNull(Me.tableTableCompany.Column9Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn9Null()
            Me(Me.tableTableCompany.Column9Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn10Null() As Boolean
            Return Me.IsNull(Me.tableTableCompany.Column10Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn10Null()
            Me(Me.tableTableCompany.Column10Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn11Null() As Boolean
            Return Me.IsNull(Me.tableTableCompany.Column11Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn11Null()
            Me(Me.tableTableCompany.Column11Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn12Null() As Boolean
            Return Me.IsNull(Me.tableTableCompany.Column12Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn12Null()
            Me(Me.tableTableCompany.Column12Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn13Null() As Boolean
            Return Me.IsNull(Me.tableTableCompany.Column13Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn13Null()
            Me(Me.tableTableCompany.Column13Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn14Null() As Boolean
            Return Me.IsNull(Me.tableTableCompany.Column14Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn14Null()
            Me(Me.tableTableCompany.Column14Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn15Null() As Boolean
            Return Me.IsNull(Me.tableTableCompany.Column15Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn15Null()
            Me(Me.tableTableCompany.Column15Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn16Null() As Boolean
            Return Me.IsNull(Me.tableTableCompany.Column16Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn16Null()
            Me(Me.tableTableCompany.Column16Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn17Null() As Boolean
            Return Me.IsNull(Me.tableTableCompany.Column17Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn17Null()
            Me(Me.tableTableCompany.Column17Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn18Null() As Boolean
            Return Me.IsNull(Me.tableTableCompany.Column18Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn18Null()
            Me(Me.tableTableCompany.Column18Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn19Null() As Boolean
            Return Me.IsNull(Me.tableTableCompany.Column19Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn19Null()
            Me(Me.tableTableCompany.Column19Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn20Null() As Boolean
            Return Me.IsNull(Me.tableTableCompany.Column20Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn20Null()
            Me(Me.tableTableCompany.Column20Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn21Null() As Boolean
            Return Me.IsNull(Me.tableTableCompany.Column21Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn21Null()
            Me(Me.tableTableCompany.Column21Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn22Null() As Boolean
            Return Me.IsNull(Me.tableTableCompany.Column22Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn22Null()
            Me(Me.tableTableCompany.Column22Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn23Null() As Boolean
            Return Me.IsNull(Me.tableTableCompany.Column23Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn23Null()
            Me(Me.tableTableCompany.Column23Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn24Null() As Boolean
            Return Me.IsNull(Me.tableTableCompany.Column24Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn24Null()
            Me(Me.tableTableCompany.Column24Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn25Null() As Boolean
            Return Me.IsNull(Me.tableTableCompany.Column25Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn25Null()
            Me(Me.tableTableCompany.Column25Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn26Null() As Boolean
            Return Me.IsNull(Me.tableTableCompany.Column26Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn26Null()
            Me(Me.tableTableCompany.Column26Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn27Null() As Boolean
            Return Me.IsNull(Me.tableTableCompany.Column27Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn27Null()
            Me(Me.tableTableCompany.Column27Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn28Null() As Boolean
            Return Me.IsNull(Me.tableTableCompany.Column28Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn28Null()
            Me(Me.tableTableCompany.Column28Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn29Null() As Boolean
            Return Me.IsNull(Me.tableTableCompany.Column29Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn29Null()
            Me(Me.tableTableCompany.Column29Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn30Null() As Boolean
            Return Me.IsNull(Me.tableTableCompany.Column30Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn30Null()
            Me(Me.tableTableCompany.Column30Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn31Null() As Boolean
            Return Me.IsNull(Me.tableTableCompany.Column31Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn31Null()
            Me(Me.tableTableCompany.Column31Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn32Null() As Boolean
            Return Me.IsNull(Me.tableTableCompany.Column32Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn32Null()
            Me(Me.tableTableCompany.Column32Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn33Null() As Boolean
            Return Me.IsNull(Me.tableTableCompany.Column33Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn33Null()
            Me(Me.tableTableCompany.Column33Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn34Null() As Boolean
            Return Me.IsNull(Me.tableTableCompany.Column34Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn34Null()
            Me(Me.tableTableCompany.Column34Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn35Null() As Boolean
            Return Me.IsNull(Me.tableTableCompany.Column35Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn35Null()
            Me(Me.tableTableCompany.Column35Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn36Null() As Boolean
            Return Me.IsNull(Me.tableTableCompany.Column36Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn36Null()
            Me(Me.tableTableCompany.Column36Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn37Null() As Boolean
            Return Me.IsNull(Me.tableTableCompany.Column37Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn37Null()
            Me(Me.tableTableCompany.Column37Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn38Null() As Boolean
            Return Me.IsNull(Me.tableTableCompany.Column38Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn38Null()
            Me(Me.tableTableCompany.Column38Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn39Null() As Boolean
            Return Me.IsNull(Me.tableTableCompany.Column39Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn39Null()
            Me(Me.tableTableCompany.Column39Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn40Null() As Boolean
            Return Me.IsNull(Me.tableTableCompany.Column40Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn40Null()
            Me(Me.tableTableCompany.Column40Column) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class Table5Row
        Inherits Global.System.Data.DataRow
        
        Private tableTable5 As Table5DataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableTable5 = CType(Me.Table,Table5DataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column1() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable5.Column1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column1' in table 'Table5' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable5.Column1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column2() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable5.Column2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column2' in table 'Table5' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable5.Column2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column3() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable5.Column3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column3' in table 'Table5' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable5.Column3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column4() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable5.Column4Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column4' in table 'Table5' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable5.Column4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column5() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable5.Column5Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column5' in table 'Table5' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable5.Column5Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column6() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable5.Column6Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column6' in table 'Table5' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable5.Column6Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column7() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable5.Column7Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column7' in table 'Table5' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable5.Column7Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column8() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable5.Column8Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column8' in table 'Table5' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable5.Column8Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column9() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable5.Column9Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column9' in table 'Table5' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable5.Column9Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column10() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable5.Column10Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column10' in table 'Table5' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable5.Column10Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column11() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable5.Column11Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column11' in table 'Table5' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable5.Column11Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column12() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable5.Column12Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column12' in table 'Table5' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable5.Column12Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column13() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable5.Column13Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column13' in table 'Table5' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable5.Column13Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column14() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable5.Column14Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column14' in table 'Table5' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable5.Column14Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column15() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable5.Column15Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column15' in table 'Table5' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable5.Column15Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column16() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable5.Column16Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column16' in table 'Table5' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable5.Column16Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column17() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable5.Column17Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column17' in table 'Table5' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable5.Column17Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column18() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable5.Column18Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column18' in table 'Table5' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable5.Column18Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column19() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable5.Column19Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column19' in table 'Table5' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable5.Column19Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column20() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable5.Column20Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column20' in table 'Table5' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable5.Column20Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column21() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable5.Column21Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column21' in table 'Table5' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable5.Column21Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column22() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable5.Column22Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column22' in table 'Table5' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable5.Column22Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column23() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable5.Column23Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column23' in table 'Table5' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable5.Column23Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column24() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable5.Column24Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column24' in table 'Table5' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable5.Column24Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column25() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable5.Column25Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column25' in table 'Table5' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable5.Column25Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column26() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable5.Column26Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column26' in table 'Table5' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable5.Column26Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column27() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable5.Column27Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column27' in table 'Table5' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable5.Column27Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column28() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable5.Column28Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column28' in table 'Table5' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable5.Column28Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column29() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable5.Column29Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column29' in table 'Table5' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable5.Column29Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column30() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable5.Column30Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column30' in table 'Table5' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable5.Column30Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column31() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable5.Column31Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column31' in table 'Table5' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable5.Column31Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column32() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable5.Column32Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column32' in table 'Table5' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable5.Column32Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column33() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable5.Column33Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column33' in table 'Table5' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable5.Column33Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column34() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable5.Column34Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column34' in table 'Table5' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable5.Column34Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column35() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable5.Column35Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column35' in table 'Table5' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable5.Column35Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn1Null() As Boolean
            Return Me.IsNull(Me.tableTable5.Column1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn1Null()
            Me(Me.tableTable5.Column1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn2Null() As Boolean
            Return Me.IsNull(Me.tableTable5.Column2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn2Null()
            Me(Me.tableTable5.Column2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn3Null() As Boolean
            Return Me.IsNull(Me.tableTable5.Column3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn3Null()
            Me(Me.tableTable5.Column3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn4Null() As Boolean
            Return Me.IsNull(Me.tableTable5.Column4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn4Null()
            Me(Me.tableTable5.Column4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn5Null() As Boolean
            Return Me.IsNull(Me.tableTable5.Column5Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn5Null()
            Me(Me.tableTable5.Column5Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn6Null() As Boolean
            Return Me.IsNull(Me.tableTable5.Column6Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn6Null()
            Me(Me.tableTable5.Column6Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn7Null() As Boolean
            Return Me.IsNull(Me.tableTable5.Column7Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn7Null()
            Me(Me.tableTable5.Column7Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn8Null() As Boolean
            Return Me.IsNull(Me.tableTable5.Column8Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn8Null()
            Me(Me.tableTable5.Column8Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn9Null() As Boolean
            Return Me.IsNull(Me.tableTable5.Column9Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn9Null()
            Me(Me.tableTable5.Column9Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn10Null() As Boolean
            Return Me.IsNull(Me.tableTable5.Column10Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn10Null()
            Me(Me.tableTable5.Column10Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn11Null() As Boolean
            Return Me.IsNull(Me.tableTable5.Column11Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn11Null()
            Me(Me.tableTable5.Column11Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn12Null() As Boolean
            Return Me.IsNull(Me.tableTable5.Column12Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn12Null()
            Me(Me.tableTable5.Column12Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn13Null() As Boolean
            Return Me.IsNull(Me.tableTable5.Column13Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn13Null()
            Me(Me.tableTable5.Column13Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn14Null() As Boolean
            Return Me.IsNull(Me.tableTable5.Column14Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn14Null()
            Me(Me.tableTable5.Column14Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn15Null() As Boolean
            Return Me.IsNull(Me.tableTable5.Column15Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn15Null()
            Me(Me.tableTable5.Column15Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn16Null() As Boolean
            Return Me.IsNull(Me.tableTable5.Column16Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn16Null()
            Me(Me.tableTable5.Column16Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn17Null() As Boolean
            Return Me.IsNull(Me.tableTable5.Column17Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn17Null()
            Me(Me.tableTable5.Column17Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn18Null() As Boolean
            Return Me.IsNull(Me.tableTable5.Column18Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn18Null()
            Me(Me.tableTable5.Column18Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn19Null() As Boolean
            Return Me.IsNull(Me.tableTable5.Column19Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn19Null()
            Me(Me.tableTable5.Column19Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn20Null() As Boolean
            Return Me.IsNull(Me.tableTable5.Column20Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn20Null()
            Me(Me.tableTable5.Column20Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn21Null() As Boolean
            Return Me.IsNull(Me.tableTable5.Column21Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn21Null()
            Me(Me.tableTable5.Column21Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn22Null() As Boolean
            Return Me.IsNull(Me.tableTable5.Column22Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn22Null()
            Me(Me.tableTable5.Column22Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn23Null() As Boolean
            Return Me.IsNull(Me.tableTable5.Column23Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn23Null()
            Me(Me.tableTable5.Column23Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn24Null() As Boolean
            Return Me.IsNull(Me.tableTable5.Column24Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn24Null()
            Me(Me.tableTable5.Column24Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn25Null() As Boolean
            Return Me.IsNull(Me.tableTable5.Column25Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn25Null()
            Me(Me.tableTable5.Column25Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn26Null() As Boolean
            Return Me.IsNull(Me.tableTable5.Column26Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn26Null()
            Me(Me.tableTable5.Column26Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn27Null() As Boolean
            Return Me.IsNull(Me.tableTable5.Column27Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn27Null()
            Me(Me.tableTable5.Column27Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn28Null() As Boolean
            Return Me.IsNull(Me.tableTable5.Column28Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn28Null()
            Me(Me.tableTable5.Column28Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn29Null() As Boolean
            Return Me.IsNull(Me.tableTable5.Column29Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn29Null()
            Me(Me.tableTable5.Column29Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn30Null() As Boolean
            Return Me.IsNull(Me.tableTable5.Column30Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn30Null()
            Me(Me.tableTable5.Column30Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn31Null() As Boolean
            Return Me.IsNull(Me.tableTable5.Column31Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn31Null()
            Me(Me.tableTable5.Column31Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn32Null() As Boolean
            Return Me.IsNull(Me.tableTable5.Column32Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn32Null()
            Me(Me.tableTable5.Column32Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn33Null() As Boolean
            Return Me.IsNull(Me.tableTable5.Column33Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn33Null()
            Me(Me.tableTable5.Column33Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn34Null() As Boolean
            Return Me.IsNull(Me.tableTable5.Column34Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn34Null()
            Me(Me.tableTable5.Column34Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn35Null() As Boolean
            Return Me.IsNull(Me.tableTable5.Column35Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn35Null()
            Me(Me.tableTable5.Column35Column) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class Table6Row
        Inherits Global.System.Data.DataRow
        
        Private tableTable6 As Table6DataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableTable6 = CType(Me.Table,Table6DataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column1() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable6.Column1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column1' in table 'Table6' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable6.Column1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column2() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable6.Column2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column2' in table 'Table6' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable6.Column2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column3() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable6.Column3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column3' in table 'Table6' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable6.Column3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column4() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable6.Column4Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column4' in table 'Table6' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable6.Column4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column5() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable6.Column5Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column5' in table 'Table6' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable6.Column5Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column6() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable6.Column6Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column6' in table 'Table6' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable6.Column6Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column7() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable6.Column7Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column7' in table 'Table6' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable6.Column7Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column8() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable6.Column8Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column8' in table 'Table6' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable6.Column8Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column9() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable6.Column9Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column9' in table 'Table6' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable6.Column9Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column10() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable6.Column10Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column10' in table 'Table6' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable6.Column10Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column11() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable6.Column11Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column11' in table 'Table6' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable6.Column11Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column12() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable6.Column12Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column12' in table 'Table6' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable6.Column12Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column13() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable6.Column13Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column13' in table 'Table6' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable6.Column13Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column14() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable6.Column14Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column14' in table 'Table6' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable6.Column14Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column15() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable6.Column15Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column15' in table 'Table6' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable6.Column15Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column16() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable6.Column16Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column16' in table 'Table6' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable6.Column16Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column17() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable6.Column17Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column17' in table 'Table6' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable6.Column17Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column18() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable6.Column18Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column18' in table 'Table6' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable6.Column18Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column19() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable6.Column19Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column19' in table 'Table6' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable6.Column19Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column20() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable6.Column20Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column20' in table 'Table6' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable6.Column20Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column21() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable6.Column21Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column21' in table 'Table6' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable6.Column21Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column22() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable6.Column22Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column22' in table 'Table6' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable6.Column22Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column23() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable6.Column23Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column23' in table 'Table6' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable6.Column23Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column24() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable6.Column24Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column24' in table 'Table6' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable6.Column24Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column25() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable6.Column25Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column25' in table 'Table6' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable6.Column25Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column26() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable6.Column26Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column26' in table 'Table6' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable6.Column26Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column27() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable6.Column27Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column27' in table 'Table6' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable6.Column27Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column28() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable6.Column28Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column28' in table 'Table6' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable6.Column28Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column29() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable6.Column29Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column29' in table 'Table6' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable6.Column29Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column30() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable6.Column30Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column30' in table 'Table6' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable6.Column30Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column31() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable6.Column31Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column31' in table 'Table6' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable6.Column31Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column32() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable6.Column32Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column32' in table 'Table6' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable6.Column32Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column33() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable6.Column33Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column33' in table 'Table6' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable6.Column33Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column34() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable6.Column34Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column34' in table 'Table6' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable6.Column34Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column35() As String
            Get
                Try 
                    Return CType(Me(Me.tableTable6.Column35Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column35' in table 'Table6' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTable6.Column35Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn1Null() As Boolean
            Return Me.IsNull(Me.tableTable6.Column1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn1Null()
            Me(Me.tableTable6.Column1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn2Null() As Boolean
            Return Me.IsNull(Me.tableTable6.Column2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn2Null()
            Me(Me.tableTable6.Column2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn3Null() As Boolean
            Return Me.IsNull(Me.tableTable6.Column3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn3Null()
            Me(Me.tableTable6.Column3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn4Null() As Boolean
            Return Me.IsNull(Me.tableTable6.Column4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn4Null()
            Me(Me.tableTable6.Column4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn5Null() As Boolean
            Return Me.IsNull(Me.tableTable6.Column5Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn5Null()
            Me(Me.tableTable6.Column5Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn6Null() As Boolean
            Return Me.IsNull(Me.tableTable6.Column6Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn6Null()
            Me(Me.tableTable6.Column6Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn7Null() As Boolean
            Return Me.IsNull(Me.tableTable6.Column7Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn7Null()
            Me(Me.tableTable6.Column7Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn8Null() As Boolean
            Return Me.IsNull(Me.tableTable6.Column8Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn8Null()
            Me(Me.tableTable6.Column8Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn9Null() As Boolean
            Return Me.IsNull(Me.tableTable6.Column9Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn9Null()
            Me(Me.tableTable6.Column9Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn10Null() As Boolean
            Return Me.IsNull(Me.tableTable6.Column10Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn10Null()
            Me(Me.tableTable6.Column10Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn11Null() As Boolean
            Return Me.IsNull(Me.tableTable6.Column11Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn11Null()
            Me(Me.tableTable6.Column11Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn12Null() As Boolean
            Return Me.IsNull(Me.tableTable6.Column12Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn12Null()
            Me(Me.tableTable6.Column12Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn13Null() As Boolean
            Return Me.IsNull(Me.tableTable6.Column13Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn13Null()
            Me(Me.tableTable6.Column13Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn14Null() As Boolean
            Return Me.IsNull(Me.tableTable6.Column14Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn14Null()
            Me(Me.tableTable6.Column14Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn15Null() As Boolean
            Return Me.IsNull(Me.tableTable6.Column15Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn15Null()
            Me(Me.tableTable6.Column15Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn16Null() As Boolean
            Return Me.IsNull(Me.tableTable6.Column16Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn16Null()
            Me(Me.tableTable6.Column16Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn17Null() As Boolean
            Return Me.IsNull(Me.tableTable6.Column17Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn17Null()
            Me(Me.tableTable6.Column17Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn18Null() As Boolean
            Return Me.IsNull(Me.tableTable6.Column18Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn18Null()
            Me(Me.tableTable6.Column18Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn19Null() As Boolean
            Return Me.IsNull(Me.tableTable6.Column19Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn19Null()
            Me(Me.tableTable6.Column19Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn20Null() As Boolean
            Return Me.IsNull(Me.tableTable6.Column20Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn20Null()
            Me(Me.tableTable6.Column20Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn21Null() As Boolean
            Return Me.IsNull(Me.tableTable6.Column21Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn21Null()
            Me(Me.tableTable6.Column21Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn22Null() As Boolean
            Return Me.IsNull(Me.tableTable6.Column22Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn22Null()
            Me(Me.tableTable6.Column22Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn23Null() As Boolean
            Return Me.IsNull(Me.tableTable6.Column23Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn23Null()
            Me(Me.tableTable6.Column23Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn24Null() As Boolean
            Return Me.IsNull(Me.tableTable6.Column24Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn24Null()
            Me(Me.tableTable6.Column24Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn25Null() As Boolean
            Return Me.IsNull(Me.tableTable6.Column25Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn25Null()
            Me(Me.tableTable6.Column25Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn26Null() As Boolean
            Return Me.IsNull(Me.tableTable6.Column26Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn26Null()
            Me(Me.tableTable6.Column26Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn27Null() As Boolean
            Return Me.IsNull(Me.tableTable6.Column27Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn27Null()
            Me(Me.tableTable6.Column27Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn28Null() As Boolean
            Return Me.IsNull(Me.tableTable6.Column28Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn28Null()
            Me(Me.tableTable6.Column28Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn29Null() As Boolean
            Return Me.IsNull(Me.tableTable6.Column29Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn29Null()
            Me(Me.tableTable6.Column29Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn30Null() As Boolean
            Return Me.IsNull(Me.tableTable6.Column30Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn30Null()
            Me(Me.tableTable6.Column30Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn31Null() As Boolean
            Return Me.IsNull(Me.tableTable6.Column31Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn31Null()
            Me(Me.tableTable6.Column31Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn32Null() As Boolean
            Return Me.IsNull(Me.tableTable6.Column32Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn32Null()
            Me(Me.tableTable6.Column32Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn33Null() As Boolean
            Return Me.IsNull(Me.tableTable6.Column33Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn33Null()
            Me(Me.tableTable6.Column33Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn34Null() As Boolean
            Return Me.IsNull(Me.tableTable6.Column34Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn34Null()
            Me(Me.tableTable6.Column34Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn35Null() As Boolean
            Return Me.IsNull(Me.tableTable6.Column35Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn35Null()
            Me(Me.tableTable6.Column35Column) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class TableGeneralRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As TableGeneralRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As TableGeneralRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As TableGeneralRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class Table1RowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As Table1Row
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As Table1Row, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As Table1Row
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class Table2RowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As Table2Row
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As Table2Row, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As Table2Row
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class Table3RowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As Table3Row
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As Table3Row, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As Table3Row
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class Table4RowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As Table4Row
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As Table4Row, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As Table4Row
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class TableCompanyRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As TableCompanyRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As TableCompanyRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As TableCompanyRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class Table5RowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As Table5Row
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As Table5Row, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As Table5Row
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class Table6RowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As Table6Row
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As Table6Row, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As Table6Row
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class
