<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>